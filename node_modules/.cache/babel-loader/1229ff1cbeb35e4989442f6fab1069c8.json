{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\Blogging\\\\blogapp\\\\src\\\\Components\\\\Posts\\\\Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport Post from '../Post/Post';\nimport './Posts.css';\nimport { PostsProivder, PostsContext } from '../../Context/Posts/Posts';\nimport { UserContext } from '../../Context/User/UserContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allPostURL = 'http://127.0.0.1:8000/api/posts/all/';\n\nconst Posts = () => {\n  _s();\n\n  const [user, setUser] = useContext(UserContext);\n  const [posts, setPosts] = useContext(PostsContext);\n  const newposts = [];\n  useEffect(p => {\n    console.log(p);\n    const token = user ? user.token : \"\";\n\n    if (newposts.length !== 0) {\n      axios.get(allPostURL, {\n        headers: {\n          Authorization: 'token ' + token\n        }\n      }).then(res => {\n        const newposts = res.data;\n        setPosts(newposts);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: posts.map(p => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        title: p.title,\n        message: p.message,\n        updated_at: p.updated_at,\n        username: p.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 23\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Posts, \"qTDxr5XIBzkHtImwz3NIMTkxJY0=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["D:/react/Blogging/blogapp/src/Components/Posts/Posts.jsx"],"names":["React","useContext","useEffect","Post","PostsProivder","PostsContext","UserContext","axios","allPostURL","Posts","user","setUser","posts","setPosts","newposts","p","console","log","token","length","get","headers","Authorization","then","res","data","map","title","message","updated_at","username"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,aAAP;AACA,SAASC,aAAT,EAAuBC,YAAvB,QAA2C,2BAA3C;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,UAAU,GAAG,sCAAnB;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAGhB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBV,UAAU,CAACK,WAAD,CAAjC;AACA,QAAM,CAACM,KAAD,EAAOC,QAAP,IAAmBZ,UAAU,CAACI,YAAD,CAAnC;AACA,QAAMS,QAAQ,GAAG,EAAjB;AAGAZ,EAAAA,SAAS,CAAGa,CAAD,IAAO;AAEdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,UAAMG,KAAK,GAAGR,IAAI,GAAGA,IAAI,CAACQ,KAAR,GAAc,EAAhC;;AAEA,QAAGJ,QAAQ,CAACK,MAAT,KAAoB,CAAvB,EACA;AACIZ,MAAAA,KAAK,CAACa,GAAN,CAAUZ,UAAV,EAAqB;AACjBa,QAAAA,OAAO,EAAG;AACNC,UAAAA,aAAa,EAAE,WAASJ;AADlB;AADO,OAArB,EAIGK,IAJH,CAKIC,GAAG,IAAI;AACH,cAAMV,QAAQ,GAAGU,GAAG,CAACC,IAArB;AACAZ,QAAAA,QAAQ,CAACC,QAAD,CAAR;AACH,OARL;AAUH;AAGJ,GApBQ,CAAT;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACKF,KAAK,CAACc,GAAN,CAAWX,CAAC,IAAI;AACd,0BAAO,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEA,CAAC,CAACY,KAAf;AAAsB,QAAA,OAAO,EAAEZ,CAAC,CAACa,OAAjC;AAA0C,QAAA,UAAU,EAAEb,CAAC,CAACc,UAAxD;AAAqE,QAAA,QAAQ,EAAEd,CAAC,CAACe;AAAjF;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAtCD;;GAAMrB,K;;KAAAA,K;AAwCN,eAAeA,KAAf","sourcesContent":["import React, { useContext,useEffect } from 'react'\r\nimport Post from '../Post/Post';\r\nimport './Posts.css';\r\nimport { PostsProivder,PostsContext } from '../../Context/Posts/Posts';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\nimport axios from 'axios';\r\nconst allPostURL = 'http://127.0.0.1:8000/api/posts/all/'\r\nconst Posts = () => {\r\n\r\n\r\n    const [user,setUser] = useContext(UserContext);\r\n    const [posts,setPosts] = useContext(PostsContext);\r\n    const newposts = [];\r\n\r\n\r\n    useEffect( (p) => {\r\n\r\n        console.log(p);\r\n        const token = user ? user.token:\"\";\r\n        \r\n        if(newposts.length !== 0)\r\n        {\r\n            axios.get(allPostURL,{\r\n                headers : {\r\n                    Authorization: 'token '+token,\r\n                }\r\n            }).then(\r\n                res => {\r\n                    const newposts = res.data\r\n                    setPosts(newposts);\r\n                }\r\n            )\r\n        }\r\n        \r\n\r\n    });\r\n\r\n    \r\n    return (\r\n        <div className=\"posts\">\r\n           { posts.map( p => {\r\n               return <Post title={p.title} message={p.message} updated_at={p.updated_at}  username={p.username} />\r\n           })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n"]},"metadata":{},"sourceType":"module"}