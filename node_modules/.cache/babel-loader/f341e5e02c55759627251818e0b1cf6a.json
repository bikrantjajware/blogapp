{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\Blogging\\\\blogapp\\\\src\\\\Components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport './Sidebar.css';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { UserContext } from '../../Context/User/UserContext';\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\nimport Group from '../Group/Group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allGroupsURL = 'http://127.0.0.1:8000/api/groups/all';\nconst addGroupURL = 'http://127.0.0.1:8000/api/groups/new/';\n\nconst Sidebar = () => {\n  _s();\n\n  const history = useHistory();\n  const name = \"hi\";\n  const desc = \"hello\";\n\n  const loadGroups = token => {\n    if (token == '' || token == undefined) {\n      history.push('/login');\n      return;\n    }\n\n    axios.get(allGroupsURL, {\n      headers: {\n        Authorization: 'token ' + token\n      }\n    }).then(res => {\n      setGroups(prev => prev = res.data);\n    });\n  };\n\n  const addGroupHandler = token => {// axios.post(addGroupURL,{\n    //     name : name,\n    //     description : desc,\n    // },{\n    //     headers : {\n    //         Authorization : 'token ' + token,\n    //     }\n    // })\n  };\n\n  const [user] = useContext(UserContext);\n  const [groups, setGroups] = useContext(GroupContext);\n  const token = user ? user.token : ''; // const isJoined = groups.members.includes(user.id);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groupControls\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        onClic: () => addGroupHandler(token),\n        className: \"addGroup fas fa-plus-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: () => loadGroups(token),\n        className: \"reload fas fa-redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this), groups.map(g => {\n      return /*#__PURE__*/_jsxDEV(Group, {\n        name: g.name,\n        reload: token => loadGroups(token),\n        desc: g.description,\n        members: g.members.length,\n        posts: g.posts.length,\n        slug: g.slug,\n        isJoined: g.members.includes(user.id)\n      }, g.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 23\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"7Lp5rW9U2lOk6BQ0arsecRDDYns=\", false, function () {\n  return [useHistory];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/react/Blogging/blogapp/src/Components/Sidebar/Sidebar.jsx"],"names":["React","useContext","useState","useHistory","axios","UserContext","GroupContext","Group","allGroupsURL","addGroupURL","Sidebar","history","name","desc","loadGroups","token","undefined","push","get","headers","Authorization","then","res","setGroups","prev","data","addGroupHandler","user","groups","map","g","description","members","length","posts","slug","includes","id"],"mappings":"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","sourcesContent":["import React,{useContext,useState} from 'react'\r\nimport './Sidebar.css';\r\nimport { useHistory, } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\r\nimport Group from '../Group/Group';\r\n\r\nconst allGroupsURL = 'http://127.0.0.1:8000/api/groups/all'\r\nconst addGroupURL = 'http://127.0.0.1:8000/api/groups/new/';\r\n\r\nconst Sidebar = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const name=\"hi\"\r\n    const desc = \"hello\"\r\n\r\n    const loadGroups = (token) => {\r\n        if(token=='' || token==undefined)\r\n        {\r\n            history.push('/login');\r\n            return;\r\n        }\r\n    \r\n        axios.get(allGroupsURL,{\r\n            headers : {\r\n                Authorization : 'token '+token,\r\n            }\r\n        }).then( res => {\r\n            setGroups( prev => prev = res.data);\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const addGroupHandler = (token) => {\r\n\r\n        // axios.post(addGroupURL,{\r\n        //     name : name,\r\n        //     description : desc,\r\n        // },{\r\n        //     headers : {\r\n        //         Authorization : 'token ' + token,\r\n        //     }\r\n        // })\r\n    }\r\n\r\n\r\n    const [user] = useContext(UserContext);\r\n    \r\n    const [groups,setGroups] = useContext(GroupContext);\r\n\r\n    const token = user ? user.token : '';\r\n    // const isJoined = groups.members.includes(user.id);\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n           <div className=\"groupControls\">\r\n            <i onClic={() => addGroupHandler(token)} className=\"addGroup fas fa-plus-circle\"  ></i>\r\n            <i   onClick={ () => loadGroups(token) } className=\"reload fas fa-redo\"></i>\r\n           </div>\r\n            \r\n            { groups.map( g => {\r\n               return <Group key={g.id} name={g.name} reload={(token) => loadGroups(token)} desc={g.description} members={g.members.length} posts={g.posts.length} slug={g.slug} isJoined={g.members.includes(user.id)} />\r\n            })}\r\n            <div>\r\n                <form>\r\n                    <input type=\"text\" placeholder=\"name\" />\r\n                    <input type=\"text\"   placeholder=\"description\"/>\r\n                    <button>create</button>\r\n\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n"]},"metadata":{},"sourceType":"module"}