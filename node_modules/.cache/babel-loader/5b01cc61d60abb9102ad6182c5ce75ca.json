{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\Blogging\\\\blogapp\\\\src\\\\Pages\\\\Write\\\\Write.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router';\nimport { UserContext } from '../../Context/User/UserContext';\nimport { PostsContext } from '../../Context/PostsContext/PostsContext';\nimport './Write.css';\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Write = () => {\n  _s();\n\n  const postURL = 'http://127.0.0.1:8000/api/posts/create/';\n  const [user, setUser] = useContext(UserContext);\n  const [posts, setPosts] = useContext(PostsContext);\n  const [groups] = useContext(GroupContext);\n  const groupOptions = groups.filter(g => g.id == user.id);\n  const [title, setTitle] = useState('');\n  const [msg, setMsg] = useState('');\n  const token = user ? user.token : '';\n  const history = useHistory();\n\n  const postHandler = e => {\n    e.preventDefault();\n\n    if (user === undefined) {\n      history.push(\"/login\");\n      return;\n    }\n\n    axios.post(postURL, {\n      title: title,\n      message: msg\n    }, {\n      headers: {\n        Authorization: 'token 787fee64caed085498829a37a84986778385f158'\n      }\n    }).then(res => {\n      const newPost = { ...res.data\n      };\n      setPosts(prevPosts => [...prevPosts, newPost]);\n      setTitle('');\n      setMsg('');\n    }).catch(err => {\n      setTitle('');\n      setMsg('');\n      alert(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"write\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"writeForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"writeFormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          className: \"writeInput\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"writeFormGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Write post...\",\n          type: \"text\",\n          value: msg,\n          onChange: e => setMsg(e.target.value),\n          className: \"writeInput writeText\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), groupOptions.map(g => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"g.name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 47\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"writeFormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"writeSubmit\",\n          onClick: postHandler,\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Write, \"g+NGuF23mW4+P1nYqz4goywkLc0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Write;\nexport default Write;\n\nvar _c;\n\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"sources":["D:/react/Blogging/blogapp/src/Pages/Write/Write.jsx"],"names":["axios","React","useState","useContext","useHistory","UserContext","PostsContext","GroupContext","Write","postURL","user","setUser","posts","setPosts","groups","groupOptions","filter","g","id","title","setTitle","msg","setMsg","token","history","postHandler","e","preventDefault","undefined","push","post","message","headers","Authorization","then","res","newPost","data","prevPosts","catch","err","alert","target","value","map"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React,{useState,useContext} from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\nimport { PostsContext } from '../../Context/PostsContext/PostsContext';\r\nimport './Write.css';\r\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\r\n\r\nconst Write = () => {\r\n\r\n    const postURL = 'http://127.0.0.1:8000/api/posts/create/'\r\n    \r\n    const [user,setUser] = useContext(UserContext);\r\n    const [posts,setPosts] = useContext(PostsContext);\r\n    const [groups] = useContext(GroupContext);\r\n    \r\n    const groupOptions = groups.filter( g => g.id == user.id);\r\n    const [title,setTitle ]  = useState('');\r\n    const [msg,setMsg ]  = useState('');\r\n    const token = user? user.token : '';\r\n    \r\n    const history = useHistory();\r\n    const postHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if(user===undefined)\r\n        {\r\n            history.push(\"/login\");\r\n            return;\r\n        }\r\n        \r\n        \r\n        axios.post(postURL,\r\n            {\r\n                title: title,\r\n               message: msg,\r\n            },\r\n            {\r\n                headers: {\r\n                    Authorization: 'token 787fee64caed085498829a37a84986778385f158',\r\n                   },\r\n        }).then(\r\n            res => {\r\n                const newPost = {...res.data};\r\n                setPosts( prevPosts => [...prevPosts,newPost]);\r\n                setTitle('');\r\n                setMsg('');\r\n            }\r\n        ).catch ( err => {\r\n            setTitle('');\r\n            setMsg('');\r\n            alert(err);\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"write\">\r\n            <form className=\"writeForm\">\r\n                <div className=\"writeFormGroup\">\r\n                    <input type=\"text\" placeholder=\"Title\" value={title} onChange={ (e) => setTitle(e.target.value)} className=\"writeInput\" autoFocus={true} />\r\n                </div>\r\n                <div className=\"writeFormGroup\">\r\n                    <textarea placeholder=\"Write post...\" type=\"text\" value={msg} onChange={ (e) => setMsg(e.target.value)} className=\"writeInput writeText\">\r\n                    </textarea>\r\n                    { groupOptions.map ( g => <p>g.name</p>)}\r\n                </div>\r\n\r\n                <div className=\"writeFormGroup\">\r\n                <button type=\"submit\" className=\"writeSubmit\" onClick={postHandler}>Post</button>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Write\r\n"]},"metadata":{},"sourceType":"module"}