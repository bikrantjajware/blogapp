{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\Blogging\\\\blogapp\\\\src\\\\Pages\\\\Register\\\\register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport './register.css';\nimport { Link, useHistory } from 'react-router-dom';\nimport instance from '../../axios';\nimport { UserContext } from '../../Context/User/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [password2, setPassword2] = useState('');\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const [user, setUser] = useContext(UserContext);\n\n  const registerUser = e => {\n    e.preventDefault();\n\n    if (password === \"\" || username === \"\" || email === \"\") {\n      alert(\"Input fields cannot be empty\");\n      return;\n    }\n\n    if (password !== password2) {\n      alert(\"password do not match\");\n      return;\n    }\n\n    const validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n    if (!email.match(validRegex)) {\n      alert(\"invalid email\");\n      return;\n    }\n\n    instance.post(`api/accounts/register`, {\n      username: username,\n      email: email,\n      password: password,\n      password2: password2\n    }).then(res => {\n      if (res.data.response && res.data.response.includes(\"successfully\")) {\n        setUser({\n          username: res.data.username,\n          email: res.data.email,\n          password: res.data.password,\n          token: res.data.token,\n          message: res.data.response\n        });\n        history.push(\"/\");\n      } else {\n        var msg = \"\";\n        msg += res.data.username ? res.data.username + '\\n' : \"\";\n        msg += res.data.email ? res.data.email + '\\n' : \"\";\n        msg += res.data.password ? res.data.password + '\\n' : \"\";\n        alert(msg);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"registerTitle\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      className: \"registerForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Enter your username...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Enter your email...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Enter password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password2,\n        onChange: e => setPassword2(e.target.value),\n        placeholder: \"Confirm password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"registerButton\",\n        onClick: registerUser,\n        children: \" Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"registerLoginButton\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link\",\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"KT3gdMkl0XuowBsFB+mtC6pRs7g=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/react/Blogging/blogapp/src/Pages/Register/register.jsx"],"names":["React","useState","useContext","Link","useHistory","instance","UserContext","Register","username","setUsername","password","setPassword","password2","setPassword2","email","setEmail","loading","setLoading","history","user","setUser","registerUser","e","preventDefault","alert","validRegex","match","post","then","res","data","response","includes","token","message","push","msg","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useContext} from 'react'\r\nimport './register.css';\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport instance  from '../../axios';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\n\r\n\r\n\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const [username,setUsername] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [password2,setPassword2] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [loading,setLoading] = useState(false)\r\n\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const [user,setUser] = useContext(UserContext);\r\n    const registerUser = (e) => {\r\n        \r\n       e.preventDefault();\r\n       if(password===\"\" || username===\"\" || email===\"\")\r\n       {\r\n           alert(\"Input fields cannot be empty\")\r\n           return;\r\n       }\r\n       if( password !==password2)\r\n        {\r\n            alert(\"password do not match\")\r\n            return;\r\n        }\r\n        const validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n        if(!email.match(validRegex))\r\n        {\r\n            alert(\"invalid email\")\r\n            return;\r\n        }\r\n        \r\n        \r\n        \r\n        instance.post(`api/accounts/register`,{\r\n            username:username,\r\n            email : email,\r\n            password:password,\r\n            password2:password2,\r\n            \r\n        }).then(\r\n            res => {\r\n                \r\n                if(res.data.response && res.data.response.includes(\"successfully\"))\r\n                {\r\n                    setUser({\r\n                        username:res.data.username,\r\n                        email:res.data.email,\r\n                        password:res.data.password,\r\n                        token : res.data.token,\r\n                        message : res.data.response,\r\n                    })\r\n                    history.push(\"/\");\r\n                }\r\n                else{\r\n                    var msg = \"\";\r\n                    msg += res.data.username? res.data.username + '\\n':\"\";\r\n                    msg += res.data.email ? res.data.email + '\\n' : \"\";\r\n                    msg += res.data.password ? res.data.password + '\\n' : \"\";\r\n                    alert(msg);\r\n                }\r\n               \r\n                \r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"register\">\r\n            <span className=\"registerTitle\">Register</span>\r\n            <form action=\"\" className=\"registerForm\">\r\n                <label>\r\n                    Username\r\n                </label>\r\n                <input type=\"text\" value={username} onChange= { (e)=> setUsername(e.target.value)} placeholder=\"Enter your username...\" />\r\n                <label>\r\n                    Email\r\n                </label>\r\n                <input type=\"email\" value={email} onChange= { (e)=> setEmail(e.target.value)} placeholder=\"Enter your email...\" />\r\n                <label>\r\n                    Password\r\n                </label>\r\n                <input type=\"password\" value={password} onChange= { (e)=> setPassword(e.target.value)} placeholder=\"Enter password\" />\r\n                <label>\r\n                    Confirm Password\r\n                </label>\r\n                <input type=\"password\" value={password2} onChange= { (e)=> setPassword2(e.target.value)}  placeholder=\"Confirm password\" />\r\n                <button className=\"registerButton\" onClick={registerUser} > Register</button>\r\n                <button className=\"registerLoginButton\"> <Link className=\"link\" to=\"/login\">Login</Link></button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}