{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\Blogging\\\\blogapp\\\\src\\\\Components\\\\SinglePosts\\\\SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { PostsContext } from '../../Context/PostsContext/PostsContext';\nimport './SinglePost.css';\nimport { Link, useHistory } from 'react-router-dom';\nimport instance from '../../axios';\nimport { UserContext } from '../../Context/User/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SinglePost = props => {\n  _s();\n\n  const [post, setPost] = useState();\n  const history = useHistory();\n  const [user] = useContext(UserContext);\n  const [posts, setPosts] = useContext(PostsContext);\n  const token = user ? user.token : '';\n  useEffect(() => {\n    (async () => {\n      await instance.get(`api/posts/detail/${props.slug}/`, {\n        headers: {\n          Authorization: 'token ' + token\n        }\n      }).then(res => {\n        setPost({ ...res.data\n        });\n      });\n    })();\n  }, []);\n\n  const deleteHandler = (post, token, e) => {\n    e.preventDefault();\n    instance.delete(`api/posts/delete/${post.id}/`, {\n      headers: {\n        Authorization: 'token ' + token\n      }\n    }).then(res => {// console.log(res.data);\n    });\n    instance.get(`api/posts/all/`, {\n      headers: {\n        Authorization: 'token ' + token\n      }\n    }).then(res => {\n      setPosts(prev => prev = res.data);\n      history.push(\"/\");\n    });\n  };\n\n  return post ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [\" \", post.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostEdit\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"singlePostIcon far fa-edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"link\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: e => deleteHandler(post, token, e),\n            className: \"singlePostIcon fas fa-trash-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 56\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-author-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"singlePostAuthor\",\n            children: [\"Author: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 68\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"singlePostGroup\",\n            children: [\"Group: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.groupname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 66\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: [\"Date: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: new Date(post.updated_at).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: post.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 16\n  }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"singlePost singlePostTitle\",\n    children: \"No post selected\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 19\n  }, this);\n};\n\n_s(SinglePost, \"A2cKrJ3E05BVjSl/Dtk27Dvq0Ww=\", false, function () {\n  return [useHistory];\n});\n\n_c = SinglePost;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["D:/react/Blogging/blogapp/src/Components/SinglePosts/SinglePost.jsx"],"names":["React","useContext","useState","useEffect","PostsContext","Link","useHistory","instance","UserContext","SinglePost","props","post","setPost","history","user","posts","setPosts","token","get","slug","headers","Authorization","then","res","data","deleteHandler","e","preventDefault","delete","id","prev","push","title","username","groupname","Date","updated_at","toLocaleDateString","message"],"mappings":"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","sourcesContent":["import React,{useContext,useState, useEffect} from 'react';\r\nimport { PostsContext } from '../../Context/PostsContext/PostsContext';\r\nimport './SinglePost.css';\r\nimport { Link,useHistory } from 'react-router-dom';\r\n\r\nimport instance from '../../axios';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\n\r\n\r\n\r\n\r\n\r\nconst SinglePost = (props) => {\r\n    \r\n    const [post,setPost] = useState();\r\n    const history = useHistory();\r\n\r\n    const [user] = useContext(UserContext);\r\n    const [posts,setPosts] = useContext(PostsContext);\r\n    const token = user ? user.token : '';\r\n\r\n    useEffect( () => {\r\n        (async () =>{\r\n           await  instance.get(`api/posts/detail/${props.slug}/`, { \r\n                headers: {\r\n                 Authorization: 'token '+token,\r\n                }\r\n            }  ).then(\r\n                res => {\r\n\r\n                    setPost({...res.data})\r\n                }\r\n            )\r\n\r\n        })();\r\n    },[])\r\n    \r\n    \r\n \r\n    \r\n    const deleteHandler = (post,token,e)=> {\r\n        \r\n        e.preventDefault();\r\n    \r\n        \r\n        instance.delete(`api/posts/delete/${post.id}/`,{\r\n            \r\n            headers: {\r\n             Authorization : 'token '+token,\r\n            }\r\n        }).then( res => {\r\n            // console.log(res.data);\r\n\r\n            \r\n        })\r\n\r\n        instance.get(`api/posts/all/`,{\r\n            headers : {\r\n                Authorization: 'token '+token,\r\n            }\r\n        }).then(\r\n            res => {\r\n                setPosts(prev => prev = res.data);\r\n                history.push(\"/\");\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        post ? <div className=\"singlePost\">\r\n            <div className=\"singlePostWrapper\">\r\n                <h1 className=\"singlePostTitle\"> {post.title}</h1>\r\n                    <div className=\"singlePostEdit\">\r\n                        <i className=\"singlePostIcon far fa-edit\"></i>\r\n                       <Link to=\"/\" className=\"link\" > <i  onClick = { (e) =>deleteHandler(post,token,e)} className=\"singlePostIcon fas fa-trash-alt\"></i> </Link>\r\n                        \r\n                    </div>\r\n                \r\n                <div className=\"singlePostInfo\">\r\n                    <div className=\"post-author-group\">\r\n                        <span className=\"singlePostAuthor\">Author: <b>{post.username}</b></span>\r\n                        <span className=\"singlePostGroup\">Group: <b>{post.groupname}</b></span>\r\n                    </div>\r\n                    \r\n                    <span className=\"singlePostDate\">Date: <b>{new Date(post.updated_at).toLocaleDateString()}</b></span>\r\n                </div>\r\n                <p className=\"singlePostDesc\">\r\n                    {post.message}\r\n                </p>\r\n            </div>\r\n        </div> :  <h3 className=\"singlePost singlePostTitle\" >No post selected</h3>\r\n    )\r\n}\r\n\r\nexport default SinglePost\r\n"]},"metadata":{},"sourceType":"module"}