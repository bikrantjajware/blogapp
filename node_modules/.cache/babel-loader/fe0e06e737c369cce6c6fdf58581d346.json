{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\Blogging\\\\blogapp\\\\src\\\\Pages\\\\Write\\\\Write.jsx\",\n    _s = $RefreshSig$();\n\nimport instance from '../../axios';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router';\nimport { UserContext } from '../../Context/User/UserContext';\nimport { PostsContext } from '../../Context/PostsContext/PostsContext';\nimport './Write.css';\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\nimport Loader from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Write = () => {\n  _s();\n\n  const [user, setUser] = useContext(UserContext);\n  const [posts, setPosts] = useContext(PostsContext);\n  const [groups] = useContext(GroupContext);\n  const groupOptions = groups.filter(g => g.members.includes(user.id));\n  const [title, setTitle] = useState('');\n  const [msg, setMsg] = useState('');\n  const [groupSelect, setgroupSelect] = useState('');\n  const [loading, setLoading] = useState(false);\n  const token = user ? user.token : '';\n  const history = useHistory();\n\n  const postHandler = e => {\n    e.preventDefault();\n\n    if (user === undefined) {\n      history.push(\"/login\");\n      return;\n    } // console.log(groupSelect);\n\n\n    (async () => {\n      await instance.post(`api/posts/create/`, {\n        title: title,\n        message: msg,\n        group: groupSelect != null ? parseInt(groupSelect) : ''\n      }, {\n        headers: {\n          Authorization: 'token ' + token\n        }\n      }).then(res => {\n        const newPost = { ...res.data\n        };\n        setPosts(prevPosts => [...prevPosts, newPost]);\n        setTitle('');\n        setMsg('');\n      }).catch(err => {\n        setTitle('');\n        setMsg('');\n        alert(err);\n      });\n    })();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"write\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"writeForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"writeFormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          className: \"writeInput\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"writeFormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Write post...\",\n          type: \"text\",\n          value: msg,\n          onChange: e => setMsg(e.target.value),\n          className: \"writeInput writeText\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"writeFormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"writeInput\",\n          value: groupSelect,\n          onChange: e => setgroupSelect(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), groupOptions.map(g => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: g.id,\n            children: g.name\n          }, g.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 51\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"writeFormGroup\",\n        children: true ? /*#__PURE__*/_jsxDEV(Loader, {\n          className: \"loader\",\n          type: \"Oval\",\n          color: \"#00BFFF\",\n          height: window.innerHeight / 20,\n          width: window.innerWidth / 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"writeSubmit\",\n          onClick: postHandler,\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Write, \"Tjguya5s3EfbDvi74xKXq3KOH+Y=\", false, function () {\n  return [useHistory];\n});\n\n_c = Write;\nexport default Write;\n\nvar _c;\n\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"sources":["D:/react/Blogging/blogapp/src/Pages/Write/Write.jsx"],"names":["instance","React","useState","useEffect","useContext","useHistory","UserContext","PostsContext","GroupContext","Loader","Write","user","setUser","posts","setPosts","groups","groupOptions","filter","g","members","includes","id","title","setTitle","msg","setMsg","groupSelect","setgroupSelect","loading","setLoading","token","history","postHandler","e","preventDefault","undefined","push","post","message","group","parseInt","headers","Authorization","then","res","newPost","data","prevPosts","catch","err","alert","target","value","map","name","window","innerHeight","innerWidth"],"mappings":"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","sourcesContent":["import instance from '../../axios';\r\nimport React,{useState,useEffect,useContext} from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\nimport { PostsContext } from '../../Context/PostsContext/PostsContext';\r\nimport './Write.css';\r\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\r\nimport Loader from 'react-loader-spinner';\r\nconst Write = () => {\r\n\r\n\r\n    \r\n    \r\n    const [user,setUser] = useContext(UserContext);\r\n    const [posts,setPosts] = useContext(PostsContext);\r\n    const [groups] = useContext(GroupContext);\r\n    \r\n    const groupOptions = groups.filter( g =>  g.members.includes(user.id));\r\n    \r\n    \r\n    const [title,setTitle ]  = useState('');\r\n    const [msg,setMsg ]  = useState('');\r\n    const [groupSelect,setgroupSelect] = useState('');\r\n    const [loading,setLoading] = useState(false);\r\n\r\n\r\n    const token = user? user.token : '';\r\n    \r\n    const history = useHistory();\r\n    const postHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if(user===undefined)\r\n        {\r\n            history.push(\"/login\");\r\n            return;\r\n        }\r\n        // console.log(groupSelect);\r\n        \r\n        (async () => {\r\n                   await instance.post(`api/posts/create/`,\r\n                    {\r\n                        title: title,\r\n                    message: msg,\r\n                    group:groupSelect != null ? parseInt(groupSelect) :'',\r\n                    },\r\n                    {\r\n                        headers: {\r\n                            Authorization: 'token '+token,\r\n                        },\r\n                }).then(\r\n                    res => {\r\n                        const newPost = {...res.data};\r\n                        setPosts( prevPosts => [...prevPosts,newPost]);\r\n                        setTitle('');\r\n                        setMsg('');\r\n                    }\r\n                ).catch ( err => {\r\n\r\n                    setTitle('');\r\n                    setMsg('');\r\n                    alert(err);\r\n                })\r\n\r\n        })();\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"write\">\r\n            <form className=\"writeForm\">\r\n                <div className=\"writeFormGroup\">\r\n                    <input type=\"text\" placeholder=\"Title\" value={title} onChange={ (e) => setTitle(e.target.value)} className=\"writeInput\" autoFocus={true} />\r\n                </div>\r\n                <div className=\"writeFormGroup\">\r\n                    <textarea placeholder=\"Write post...\" type=\"text\" value={msg} onChange={ (e) => setMsg(e.target.value)} className=\"writeInput writeText\">\r\n                    </textarea>\r\n                </div>\r\n                <div className=\"writeFormGroup\">\r\n                    <select className=\"writeInput\" value={groupSelect} onChange = { (e) => setgroupSelect(e.target.value) }>\r\n                        <option value={null} ></option>\r\n                        { groupOptions.map ( g => <option key={g.id} value={g.id} >{g.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"writeFormGroup\">\r\n              { true ? <Loader \r\n                    className=\"loader\"\r\n                    type=\"Oval\"\r\n                    color=\"#00BFFF\"\r\n                    height={window.innerHeight/20}\r\n                    width={window.innerWidth/20}\r\n                        /> : <button type=\"submit\" className=\"writeSubmit\" onClick={postHandler}>Post</button>}\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Write\r\n"]},"metadata":{},"sourceType":"module"}