{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\Blogging\\\\blogapp\\\\src\\\\Pages\\\\Login\\\\login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport './login.css';\nimport { Link, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { UserContext } from '../../Context/User/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const [user, setUser] = useContext(UserContext);\n  const loginURL = 'http://127.0.0.1:8000/api/accounts/login';\n\n  const loginHandler = e => {\n    e.preventDefault();\n    axios.post('http://127.0.0.1:8000/api/accounts/token', {\n      username: username,\n      password: password\n    }).then(res => {\n      console.log(res.data);\n\n      if (res.data) {\n        const token = res.data.token;\n        console.log(token);\n        axios.interceptors.response.use(res => {\n          if (res.data) {\n            setUser({\n              username: res.data.user.username,\n              password: password,\n              email: res.data.user.password,\n              id: res.data.user.pk,\n              bio: res.data.bio,\n              phone: res.data.phone,\n              token: token\n            });\n            console.log('user=', user);\n            history.push(\"/\");\n          }\n        }, error => {\n          if (!error.response) {\n            // network error\n            this.errorStatus = 'Error: Network Error';\n          } else {\n            this.errorStatus = error.response.data.message;\n          }\n\n          return Promise.reject(error);\n        });\n        axios.get(loginURL, {\n          headers: {\n            Authorization: 'token ' + token\n          }\n        }).then(res => {\n          if (res.data) {\n            setUser({\n              username: res.data.user.username,\n              password: password,\n              email: res.data.user.password,\n              id: res.data.user.pk,\n              bio: res.data.bio,\n              phone: res.data.phone,\n              token: token\n            });\n            console.log('user=', user);\n            history.push(\"/\");\n          }\n        }).catch(error => {\n          if (!error.response) {\n            // network error\n            this.errorStatus = 'Error: Network Error';\n          } else {\n            this.errorStatus = error.response.data.message;\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"loginTitle\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      className: \"loginForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => {\n          setUsername(e.target.value);\n        },\n        placeholder: \"enter your username...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => {\n          setPassword(e.target.value);\n        },\n        placeholder: \"enter password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginButton\",\n        onClick: loginHandler,\n        children: \" Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginRegisterButton\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link\",\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"W8mBM9ZljgaZ8Hk6+qbVMloJcWs=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/react/Blogging/blogapp/src/Pages/Login/login.jsx"],"names":["React","useState","useContext","Link","useHistory","axios","UserContext","Login","username","setUsername","password","setPassword","history","user","setUser","loginURL","loginHandler","e","preventDefault","post","then","res","console","log","data","token","interceptors","response","use","email","id","pk","bio","phone","push","error","errorStatus","message","Promise","reject","get","headers","Authorization","catch","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useContext} from 'react'\r\nimport './login.css';\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\n\r\nconst Login = () => {\r\n\r\n    const [username,setUsername] = useState(\"\")\r\n    const [password,setPassword] = useState(\"\")\r\n\r\n    const history = useHistory();\r\n\r\n    const [user,setUser] = useContext(UserContext);\r\n\r\n    const loginURL = 'http://127.0.0.1:8000/api/accounts/login';\r\n\r\n    const loginHandler = (e) => {\r\n        \r\n        e.preventDefault();\r\n     \r\n        axios.post('http://127.0.0.1:8000/api/accounts/token',{\r\n        username:username,\r\n        password:password,\r\n        }).then( res => {\r\n            console.log(res.data);\r\n            if(res.data)\r\n            {\r\n                const token = res.data.token;\r\n                console.log(token);\r\n\r\n                axios.interceptors.response.use(\r\n                    res => {\r\n                        if( res.data)\r\n                        {\r\n                            setUser({\r\n                                username: res.data.user.username,\r\n                                password:password,\r\n                                email: res.data.user.password,\r\n                                id: res.data.user.pk,\r\n                                bio: res.data.bio,\r\n                                phone: res.data.phone,\r\n                                token:token,\r\n                            })\r\n                            console.log('user=',user);\r\n                            history.push(\"/\");\r\n                        }\r\n                    },\r\n                    error => {\r\n                        if (!error.response) {\r\n                            // network error\r\n                            this.errorStatus = 'Error: Network Error';\r\n                        } else {\r\n                            this.errorStatus = error.response.data.message;\r\n                        }\r\n                        return Promise.reject(error);\r\n                    }\r\n                )\r\n\r\n                axios.get(loginURL,\r\n                       { \r\n                           headers: {\r\n                            Authorization: 'token '+token,\r\n                           }\r\n                    }).then( res => {\r\n                        if( res.data)\r\n                        {\r\n                            setUser({\r\n                                username: res.data.user.username,\r\n                                password:password,\r\n                                email: res.data.user.password,\r\n                                id: res.data.user.pk,\r\n                                bio: res.data.bio,\r\n                                phone: res.data.phone,\r\n                                token:token,\r\n                            })\r\n                            console.log('user=',user);\r\n                            history.push(\"/\");\r\n                        }\r\n                        \r\n                    }).catch(error => {\r\n                        if (!error.response) {\r\n                            // network error\r\n                            this.errorStatus = 'Error: Network Error';\r\n                        } else {\r\n                            this.errorStatus = error.response.data.message;\r\n                        }\r\n                    })\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <span className=\"loginTitle\">Login</span>\r\n            <form action=\"\" className=\"loginForm\">\r\n                <label>\r\n                    Username\r\n                </label>\r\n                <input type=\"text\"  value={username} onChange={ (e) => { setUsername(e.target.value)}} placeholder=\"enter your username...\" />\r\n                <label>\r\n                    Password\r\n                </label>\r\n                <input type=\"password\"  value={password} onChange={ (e) => { setPassword(e.target.value)}} placeholder=\"enter password\" />\r\n                <button className=\"loginButton\" onClick={loginHandler} > Login</button>\r\n                <button className=\"loginRegisterButton\"> <Link className=\"link\" to=\"/register\">Register</Link></button>\r\n               \r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}