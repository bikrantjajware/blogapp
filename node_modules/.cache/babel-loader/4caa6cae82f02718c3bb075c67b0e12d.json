{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\Blogging\\\\blogapp\\\\src\\\\Pages\\\\Write\\\\Write.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router';\nimport { UserContext } from '../../Context/User/UserContext';\nimport './Write.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Write = () => {\n  _s();\n\n  const postURL = 'http://127.0.0.1:8000/api/posts/create/';\n  const [user, setUser] = useContext(UserContext);\n  const [title, setTitle] = useState('');\n  const [msg, setMsg] = useState('');\n  const token = user ? user.token : '';\n  const history = useHistory();\n\n  const postHandler = e => {\n    //     axios.get('http://127.0.0.1:8000/api/accounts/login',\n    //     { \n    //         headers: {\n    //          Authorization: 'token '+token,\n    //         }\n    //  }\n    if (user === undefined) {\n      history.push(\"/login\");\n      return;\n    }\n\n    console.log(token);\n    e.preventDefault();\n    axios.post(postURL, {\n      title: title,\n      message: msg\n    }, {\n      headers: {\n        Authorization: 'token 787fee64caed085498829a37a84986778385f158'\n      }\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"write\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"writeForm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"writeFormGroup\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: \"writeInput\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"writeFormGroup\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write post...\",\n        type: \"text\",\n        value: msg,\n        onChange: e => setMsg(e.target.value),\n        className: \"writeInput writeText\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"writeFormGroup\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"writeSubmit\",\n        onClick: postHandler,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Write, \"n7PPgdQzYFLBW0cZPI7QDbqc8Co=\", false, function () {\n  return [useHistory];\n});\n\n_c = Write;\nexport default Write;\n\nvar _c;\n\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"sources":["D:/react/Blogging/blogapp/src/Pages/Write/Write.jsx"],"names":["axios","React","useState","useContext","useHistory","UserContext","Write","postURL","user","setUser","title","setTitle","msg","setMsg","token","history","postHandler","e","undefined","push","console","log","preventDefault","post","message","headers","Authorization","then","res","catch","err","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAuBC,UAAvB,QAAwC,OAAxC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAMC,OAAO,GAAG,yCAAhB;AACA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBN,UAAU,CAACE,WAAD,CAAjC;AACA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACU,GAAD,EAAKC,MAAL,IAAiBX,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAMY,KAAK,GAAGN,IAAI,GAAEA,IAAI,CAACM,KAAP,GAAe,EAAjC;AAEA,QAAMC,OAAO,GAAGX,UAAU,EAA1B;;AACA,QAAMY,WAAW,GAAIC,CAAD,IAAO;AAE3B;AACA;AACA;AACA;AACA;AACA;AAEI,QAAGT,IAAI,KAAGU,SAAV,EACA;AACIH,MAAAA,OAAO,CAACI,IAAR,CAAa,QAAb;AACA;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACAG,IAAAA,CAAC,CAACK,cAAF;AACAtB,IAAAA,KAAK,CAACuB,IAAN,CAAWhB,OAAX,EACI;AACIG,MAAAA,KAAK,EAAEA,KADX;AAEGc,MAAAA,OAAO,EAAEZ;AAFZ,KADJ,EAKI;AACIa,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAE;AADV;AADb,KALJ,EASGC,IATH,CAUIC,GAAG,IAAI;AACHR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,KAZL,EAaEC,KAbF,CAaUC,GAAG,IAAI;AACbV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACH,KAfD;AAgBH,GAhCD;;AAmCA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAGQ;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,OAA/B;AAAuC,QAAA,KAAK,EAAEpB,KAA9C;AAAqD,QAAA,QAAQ,EAAIO,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACc,MAAF,CAASC,KAAV,CAA/E;AAAiG,QAAA,SAAS,EAAC,YAA3G;AAAwH,QAAA,SAAS,EAAE;AAAnI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHR,eAMQ;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAU,QAAA,WAAW,EAAC,eAAtB;AAAsC,QAAA,IAAI,EAAC,MAA3C;AAAkD,QAAA,KAAK,EAAEpB,GAAzD;AAA8D,QAAA,QAAQ,EAAIK,CAAD,IAAOJ,MAAM,CAACI,CAAC,CAACc,MAAF,CAASC,KAAV,CAAtF;AAAwG,QAAA,SAAS,EAAC;AAAlH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANR,eAWQ;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,aAAhC;AAA8C,QAAA,OAAO,EAAEhB,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAXR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA9DD;;GAAMV,K;UAQcF,U;;;KARdE,K;AAgEN,eAAeA,KAAf","sourcesContent":["import axios from 'axios';\r\nimport React,{useState,useContext} from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\nimport './Write.css';\r\n\r\nconst Write = () => {\r\n\r\n    const postURL = 'http://127.0.0.1:8000/api/posts/create/'\r\n    const [user,setUser] = useContext(UserContext);\r\n    const [title,setTitle ]  = useState('');\r\n    const [msg,setMsg ]  = useState('');\r\n    const token = user? user.token : '';\r\n    \r\n    const history = useHistory();\r\n    const postHandler = (e) => {\r\n\r\n    //     axios.get('http://127.0.0.1:8000/api/accounts/login',\r\n    //     { \r\n    //         headers: {\r\n    //          Authorization: 'token '+token,\r\n    //         }\r\n    //  }\r\n\r\n        if(user===undefined)\r\n        {\r\n            history.push(\"/login\");\r\n            return;\r\n        }\r\n        console.log(token);\r\n        e.preventDefault();\r\n        axios.post(postURL,\r\n            {\r\n                title: title,\r\n               message: msg,\r\n            },\r\n            {\r\n                headers: {\r\n                    Authorization: 'token 787fee64caed085498829a37a84986778385f158',\r\n                   },\r\n        }).then(\r\n            res => {\r\n                console.log(res);\r\n            }\r\n        ).catch ( err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"write\">\r\n            <form className=\"writeForm\">\r\n            </form>\r\n                <div className=\"writeFormGroup\">\r\n                    <input type=\"text\" placeholder=\"Title\" value={title} onChange={ (e) => setTitle(e.target.value)} className=\"writeInput\" autoFocus={true} />\r\n                </div>\r\n                <div className=\"writeFormGroup\">\r\n                    <textarea placeholder=\"Write post...\" type=\"text\" value={msg} onChange={ (e) => setMsg(e.target.value)} className=\"writeInput writeText\">\r\n                    </textarea>\r\n                </div>\r\n\r\n                <div className=\"writeFormGroup\">\r\n                <button type=\"submit\" className=\"writeSubmit\" onClick={postHandler}>Post</button>\r\n\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Write\r\n"]},"metadata":{},"sourceType":"module"}