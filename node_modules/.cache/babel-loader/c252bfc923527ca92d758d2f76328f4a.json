{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\Blogging\\\\blogapp\\\\src\\\\Components\\\\SinglePosts\\\\SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { PostsContext } from '../../Context/PostsContext/PostsContext';\nimport './SinglePost.css';\nimport { Link, useHistory } from 'react-router-dom';\nimport instance from '../../axios';\nimport { UserContext } from '../../Context/User/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SinglePost = props => {\n  _s();\n\n  const [post, setPost] = useState();\n  const history = useHistory();\n  const [editing, setEditing] = useState(false);\n  const [title, setTitle] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [user] = useContext(UserContext);\n  const [posts, setPosts] = useContext(PostsContext);\n  const token = user ? user.token : '';\n  useEffect(() => {\n    (async () => {\n      await instance.get(`api/posts/detail/${props.slug}/`, {\n        headers: {\n          Authorization: 'token ' + token\n        }\n      }).then(res => {\n        setPost({ ...res.data\n        });\n        setTitle(res.data.title);\n        setMessage(res.data.message);\n      });\n    })();\n  }, []);\n\n  const updateHandler = event => {\n    event.preventDefault(); // setEditing(!editing);\n\n    (async () => {\n      await instance.put(`api/posts/update/${post.slug}/`, {\n        title: title,\n        message: message\n      }, {\n        headers: {\n          Authorization: 'token ' + token\n        }\n      }).then(res => {\n        console.log(res.data);\n        alert(res.data);\n      });\n    })();\n  };\n\n  const deleteHandler = (post, token, e) => {\n    e.preventDefault();\n    instance.delete(`api/posts/delete/${post.id}/`, {\n      headers: {\n        Authorization: 'token ' + token\n      }\n    }).then(res => {// console.log(res.data);\n    });\n    instance.get(`api/posts/all/`, {\n      headers: {\n        Authorization: 'token ' + token\n      }\n    }).then(res => {\n      setPosts(prev => prev = res.data);\n      history.push(\"/\");\n    });\n  };\n\n  return post ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"singlePostTitle\",\n        onChange: e => {\n          setTitle(e.target.value);\n        },\n        value: title,\n        readOnly: !editing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostEdit\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: e => setEditing(!editing),\n          className: \"singlePostIcon far fa-edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"link\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: e => deleteHandler(post, token, e),\n            className: \"singlePostIcon fas fa-trash-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 56\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-author-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"singlePostAuthor\",\n            children: [\"Author: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 68\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"singlePostGroup\",\n            children: [\"Group: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.groupname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 66\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: [\"Date: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: new Date(post.updated_at).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        className: \"singlePostDesc\",\n        readOnly: !editing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), editing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"updateButton\",\n        onClick: updateHandler,\n        children: \" Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 16\n  }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"singlePost singlePostTitle\",\n    children: \"No post selected\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 19\n  }, this);\n};\n\n_s(SinglePost, \"yg39eHpAZZsOzGrGJ35AtHW+et0=\", false, function () {\n  return [useHistory];\n});\n\n_c = SinglePost;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["D:/react/Blogging/blogapp/src/Components/SinglePosts/SinglePost.jsx"],"names":["React","useContext","useState","useEffect","PostsContext","Link","useHistory","instance","UserContext","SinglePost","props","post","setPost","history","editing","setEditing","title","setTitle","message","setMessage","loading","setLoading","user","posts","setPosts","token","get","slug","headers","Authorization","then","res","data","updateHandler","event","preventDefault","put","console","log","alert","deleteHandler","e","delete","id","prev","push","target","value","username","groupname","Date","updated_at","toLocaleDateString"],"mappings":"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","sourcesContent":["import React,{useContext,useState, useEffect} from 'react';\r\nimport { PostsContext } from '../../Context/PostsContext/PostsContext';\r\nimport './SinglePost.css';\r\nimport { Link,useHistory } from 'react-router-dom';\r\n\r\nimport instance from '../../axios';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\n\r\n\r\n\r\n\r\n\r\nconst SinglePost = (props) => {\r\n    \r\n    const [post,setPost] = useState();\r\n    const history = useHistory();\r\n    const [editing,setEditing] = useState(false);\r\n    \r\n    const [title,setTitle] = useState('');\r\n    const [message,setMessage] = useState('');\r\n    const [loading,setLoading] = useState(false);\r\n\r\n    const [user] = useContext(UserContext);\r\n    const [posts,setPosts] = useContext(PostsContext);\r\n    const token = user ? user.token : '';\r\n\r\n    useEffect( () => {\r\n        (async () =>{\r\n           await  instance.get(`api/posts/detail/${props.slug}/`, { \r\n                headers: {\r\n                 Authorization: 'token '+token,\r\n                }\r\n            }  ).then(\r\n                res => {\r\n\r\n                    setPost({...res.data})\r\n                    setTitle(res.data.title)\r\n                    setMessage(res.data.message)\r\n                }\r\n            )\r\n\r\n        })();\r\n    },[])\r\n    \r\n    const updateHandler = (event) => {\r\n        event.preventDefault();\r\n        // setEditing(!editing);\r\n\r\n        (async () => {\r\n            await instance.put(`api/posts/update/${post.slug}/`,{\r\n                title:title,\r\n                message:message,\r\n            },{\r\n                headers: {\r\n                    Authorization : 'token '+token,\r\n                   }\r\n            }).then( res => {\r\n                console.log(res.data);\r\n                alert(res.data)\r\n            })\r\n        })();\r\n\r\n\r\n        \r\n        \r\n    }\r\n    \r\n \r\n    \r\n    const deleteHandler = (post,token,e)=> {\r\n        \r\n        e.preventDefault();\r\n    \r\n        \r\n        instance.delete(`api/posts/delete/${post.id}/`,{\r\n            \r\n            headers: {\r\n             Authorization : 'token '+token,\r\n            }\r\n        }).then( res => {\r\n            // console.log(res.data);\r\n\r\n            \r\n        })\r\n\r\n        instance.get(`api/posts/all/`,{\r\n            headers : {\r\n                Authorization: 'token '+token,\r\n            }\r\n        }).then(\r\n            res => {\r\n                setPosts(prev => prev = res.data);\r\n                \r\n                history.push(\"/\");\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        post ? <div className=\"singlePost\">\r\n            <div className=\"singlePostWrapper\">\r\n                <input type=\"text\" className=\"singlePostTitle\" onChange={ (e) => { setTitle(e.target.value)}} value={title} readOnly={!editing}  />\r\n\r\n                    <div className=\"singlePostEdit\">\r\n                        <i onClick={ e => setEditing(!editing)} className=\"singlePostIcon far fa-edit\"></i>\r\n                       <Link to=\"/\" className=\"link\" > <i  onClick = { (e) =>deleteHandler(post,token,e)} className=\"singlePostIcon fas fa-trash-alt\"></i> </Link>\r\n                        \r\n                    </div>\r\n                \r\n                <div className=\"singlePostInfo\">\r\n                    <div className=\"post-author-group\">\r\n                        <span className=\"singlePostAuthor\">Author: <b>{post.username}</b></span>\r\n                        <span className=\"singlePostGroup\">Group: <b>{post.groupname}</b></span>\r\n                    </div>\r\n                    \r\n                    <span className=\"singlePostDate\">Date: <b>{new Date(post.updated_at).toLocaleDateString()}</b></span>\r\n                </div>\r\n                <textarea value={message} onChange={ e => setMessage(e.target.value)} className=\"singlePostDesc\" readOnly={!editing}>\r\n                    \r\n                </textarea>\r\n                { editing ? <button type=\"submit\" className=\"updateButton\"  onClick={updateHandler}> Update</button> : \"\"}\r\n            </div>\r\n        </div> :  <h3 className=\"singlePost singlePostTitle\" >No post selected</h3>\r\n    )\r\n}\r\n\r\nexport default SinglePost\r\n"]},"metadata":{},"sourceType":"module"}