{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\Blogging\\\\blogapp\\\\src\\\\Components\\\\Posts\\\\Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport Post from '../Post/Post';\nimport './Posts.css';\nimport instance from '../../axios';\nimport Loader from \"react-loader-spinner\";\nimport { PostsProivder, PostsContext } from '../../Context/PostsContext/PostsContext';\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const [posts, setPosts] = useContext(PostsContext);\n  const [groups] = useContext(GroupContext);\n  const [Loading, setLoading] = useState(true);\n  const [p, setP] = useState(posts);\n  useEffect(() => {\n    (async () => {\n      await instance.get(`api/posts/all/`).then(res => {\n        setP(prev => prev = res.data);\n        setLoading(false);\n      }).catch(err => {\n        setLoading(false);\n        history.push(\"/error\");\n      });\n    })();\n  }, [posts]);\n  var posts_to_view = [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: Loading ? /*#__PURE__*/_jsxDEV(Loader, {\n      className: \"loader\",\n      type: \"ThreeDots\",\n      color: \"#00BFFF\",\n      height: window.innerHeight / 8,\n      width: window.innerWidth / 8\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 24\n    }, this) : p.map(p => {\n      var name = '';\n      groups.forEach(g => {\n        if (g.id == p.group) {\n          return name = g.name;\n        }\n      });\n      return /*#__PURE__*/_jsxDEV(Post, {\n        id: p.id,\n        title: p.title,\n        message: p.message,\n        group: name,\n        updated_at: p.updated_at,\n        username: p.username\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Posts, \"+clnZMNAliRT9upDJr6AwFNYCzU=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["D:/react/Blogging/blogapp/src/Components/Posts/Posts.jsx"],"names":["React","useState","useContext","useEffect","Post","instance","Loader","PostsProivder","PostsContext","GroupContext","Posts","posts","setPosts","groups","Loading","setLoading","p","setP","get","then","res","prev","data","catch","err","history","push","posts_to_view","window","innerHeight","innerWidth","map","name","forEach","g","id","group","title","message","updated_at","username"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,UAAzB,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASC,aAAT,EAAuBC,YAAvB,QAA2C,yCAA3C;AACA,SAASC,YAAT,QAA6B,yCAA7B;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAIhB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBV,UAAU,CAACM,YAAD,CAAnC;AACA,QAAM,CAACK,MAAD,IAAWX,UAAU,CAACO,YAAD,CAA3B;AACA,QAAM,CAACK,OAAD,EAASC,UAAT,IAAuBd,QAAQ,CAAC,IAAD,CAArC;AAEA,QAAM,CAACe,CAAD,EAAGC,IAAH,IAAWhB,QAAQ,CAACU,KAAD,CAAzB;AAGAR,EAAAA,SAAS,CAAG,MAAM;AACd,KAAC,YAAY;AACT,YAAME,QAAQ,CAACa,GAAT,CAAc,gBAAd,EAA+BC,IAA/B,CACFC,GAAG,IAAI;AACHH,QAAAA,IAAI,CAACI,IAAI,IAAIA,IAAI,GAAGD,GAAG,CAACE,IAApB,CAAJ;AACAP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAJC,EAKJQ,KALI,CAKGC,GAAG,IAAI;AACZT,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAU,QAAAA,OAAO,CAACC,IAAR,CAAa,QAAb;AACH,OARK,CAAN;AASH,KAVD;AAYH,GAbQ,EAaP,CAACf,KAAD,CAbO,CAAT;AAgBA,MAAIgB,aAAa,GAAG,EAApB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cAEIb,OAAO,gBAAI,QAAC,MAAD;AACX,MAAA,SAAS,EAAC,QADC;AAEX,MAAA,IAAI,EAAC,WAFM;AAGX,MAAA,KAAK,EAAC,SAHK;AAIX,MAAA,MAAM,EAAEc,MAAM,CAACC,WAAP,GAAmB,CAJhB;AAKX,MAAA,KAAK,EAAED,MAAM,CAACE,UAAP,GAAkB;AALd;AAAA;AAAA;AAAA;AAAA,YAAJ,GASPd,CAAC,CAACe,GAAF,CAAOf,CAAC,IAAI;AACZ,UAAIgB,IAAI,GAAG,EAAX;AACCnB,MAAAA,MAAM,CAACoB,OAAP,CAAeC,CAAC,IAAI;AACjB,YAAIA,CAAC,CAACC,EAAF,IAAQnB,CAAC,CAACoB,KAAd,EACC;AACI,iBAAOJ,IAAI,GAAGE,CAAC,CAACF,IAAhB;AACH;AACL,OALA;AAMD,0BAAO,QAAC,IAAD;AAAiB,QAAA,EAAE,EAAEhB,CAAC,CAACmB,EAAvB;AAA2B,QAAA,KAAK,EAAEnB,CAAC,CAACqB,KAApC;AAA2C,QAAA,OAAO,EAAErB,CAAC,CAACsB,OAAtD;AAA+D,QAAA,KAAK,EAAEN,IAAtE;AAA6E,QAAA,UAAU,EAAEhB,CAAC,CAACuB,UAA3F;AAAwG,QAAA,QAAQ,EAAEvB,CAAC,CAACwB;AAApH,SAAWxB,CAAC,CAACmB,EAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KATG;AAXJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAtDD;;GAAMzB,K;;KAAAA,K;AAwDN,eAAeA,KAAf","sourcesContent":["import React, { useState,useContext,useEffect } from 'react'\r\nimport Post from '../Post/Post';\r\nimport './Posts.css';\r\nimport instance from '../../axios';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { PostsProivder,PostsContext } from '../../Context/PostsContext/PostsContext';\r\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\r\n\r\n\r\nconst Posts = () => {\r\n\r\n\r\n   \r\n    const [posts,setPosts] = useContext(PostsContext);\r\n    const [groups] = useContext(GroupContext);\r\n    const [Loading,setLoading] = useState(true);\r\n\r\n    const [p,setP] = useState(posts);\r\n    \r\n\r\n    useEffect ( () => {\r\n        (async () => {\r\n            await instance.get(`api/posts/all/`).then(\r\n                res => {\r\n                    setP(prev => prev = res.data);\r\n                    setLoading(false );\r\n                }\r\n            ).catch( err => {\r\n                setLoading(false );\r\n                history.push(\"/error\")\r\n            })\r\n        })();\r\n        \r\n    },[posts])\r\n\r\n\r\n    var posts_to_view = [];\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n           {\r\n            Loading ?  <Loader\r\n            className=\"loader\"\r\n            type=\"ThreeDots\"\r\n            color=\"#00BFFF\"\r\n            height={window.innerHeight/8}\r\n            width={window.innerWidth/8}\r\n            \r\n            \r\n          /> : \r\n            p.map( p => {\r\n            var name = '';\r\n             groups.forEach(g => {\r\n                if( g.id == p.group)\r\n                 {\r\n                     return name = g.name;\r\n                 }\r\n            });\r\n            return <Post key={p.id} id={p.id} title={p.title} message={p.message} group={name}  updated_at={p.updated_at}  username={p.username} />\r\n        })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}