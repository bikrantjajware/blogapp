{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\Blogging\\\\blogapp\\\\src\\\\Context\\\\Posts\\\\Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, createContext } from \"react\";\nimport axios from \"axios\";\nimport { UserContext } from '../../Context/User/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allPostURL = 'http://127.0.0.1:8000/api/posts/all/';\nexport const PostsContext = /*#__PURE__*/createContext();\nexport const PostsProivder = props => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [user, setUser] = useContext(UserContext);\n  const token = user ? user.token : \"\";\n  const allPosts = getInitialPost(token);\n  setPosts(allPosts);\n  return /*#__PURE__*/_jsxDEV(PostsContext.Provider, {\n    value: [posts, setPosts],\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n\n_s(PostsProivder, \"8hzl+zKwPvFHzNj8t4Y1Yj7TmIE=\");\n\n_c = PostsProivder;\n\nconst getInitialPost = token => {\n  axios.get(allPostURL, {\n    headers: {\n      Authorization: 'token ' + token\n    }\n  }).then(res => {\n    return newposts = res.data;\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsProivder\");","map":{"version":3,"sources":["D:/react/Blogging/blogapp/src/Context/Posts/Posts.js"],"names":["React","useState","useContext","createContext","axios","UserContext","allPostURL","PostsContext","PostsProivder","props","posts","setPosts","user","setUser","token","allPosts","getInitialPost","children","get","headers","Authorization","then","res","newposts","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,UAAvB,EAAkCC,aAAlC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,gCAA5B;;AAGA,MAAMC,UAAU,GAAG,sCAAnB;AAEA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;AAEP,OAAO,MAAMK,aAAa,GAAGC,KAAK,IAAI;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACW,IAAD,EAAMC,OAAN,IAAiBX,UAAU,CAACG,WAAD,CAAjC;AACA,QAAMS,KAAK,GAAGF,IAAI,GAAGA,IAAI,CAACE,KAAR,GAAc,EAAhC;AACA,QAAMC,QAAQ,GAAGC,cAAc,CAACF,KAAD,CAA/B;AAEAH,EAAAA,QAAQ,CAACI,QAAD,CAAR;AACA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,CAACL,KAAD,EAAOC,QAAP,CAA9B;AAAA,cACFF,KAAK,CAACQ;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAVM;;GAAMT,a;;KAAAA,a;;AAYb,MAAMQ,cAAc,GAAIF,KAAD,IAAW;AAG9BV,EAAAA,KAAK,CAACc,GAAN,CAAUZ,UAAV,EAAqB;AACTa,IAAAA,OAAO,EAAG;AACNC,MAAAA,aAAa,EAAE,WAASN;AADlB;AADD,GAArB,EAIWO,IAJX,CAKYC,GAAG,IAAI;AACH,WAAOC,QAAQ,GAAGD,GAAG,CAACE,IAAtB;AACH,GAPb;AASH,CAZD","sourcesContent":["import React,{useState,useContext,createContext} from \"react\";\r\nimport axios from \"axios\";\r\nimport { UserContext } from '../../Context/User/UserContext';\r\n\r\n\r\nconst allPostURL = 'http://127.0.0.1:8000/api/posts/all/';\r\n\r\nexport const PostsContext = createContext();\r\n\r\nexport const PostsProivder = props => {\r\n    const [posts,setPosts] = useState([]);\r\n    const [user,setUser] = useContext(UserContext);\r\n    const token = user ? user.token:\"\";\r\n    const allPosts = getInitialPost(token);\r\n\r\n    setPosts(allPosts);\r\n    return <PostsContext.Provider value={[posts,setPosts]}>\r\n        {props.children}\r\n    </PostsContext.Provider>\r\n}\r\n\r\nconst getInitialPost = (token) => {\r\n\r\n    \r\n    axios.get(allPostURL,{\r\n                headers : {\r\n                    Authorization: 'token '+token,\r\n                }\r\n            }).then(\r\n                res => {\r\n                    return newposts = res.data\r\n                }\r\n            )\r\n}"]},"metadata":{},"sourceType":"module"}