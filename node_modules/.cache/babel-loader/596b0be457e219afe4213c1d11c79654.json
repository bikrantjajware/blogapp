{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\Blogging\\\\blogapp\\\\src\\\\Components\\\\Posts\\\\Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport Post from '../Post/Post';\nimport './Posts.css';\nimport instance from '../../axios';\nimport { PostsProivder, PostsContext } from '../../Context/PostsContext/PostsContext';\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const [posts, setPosts] = useContext(PostsContext);\n  const [groups] = useContext(GroupContext);\n  const [Loading, setLoading] = useState(false);\n  const [p, setP] = useState(posts);\n  useEffect(() => {\n    instance.get(`api/posts/all/`).then(res => {\n      setP(prev => prev = res.data);\n      setLoading(true);\n    }); // setP(posts);\n  }, [posts]);\n  var posts_to_view = [];\n  console.log(p.length);\n\n  if (p.length != 0) {\n    posts_to_view = p.map(p => {\n      var name = '';\n      groups.forEach(g => {\n        if (g.id == p.group) {\n          return name = g.name;\n        }\n      });\n      return /*#__PURE__*/_jsxDEV(Post, {\n        id: p.id,\n        title: p.title,\n        message: p.message,\n        group: name,\n        updated_at: p.updated_at,\n        username: p.username\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this);\n    });\n  }\n\n  console.log(posts_to_view);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: Loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this) : {\n      posts_to_view\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Posts, \"BliwcktrRatXkjFI00t2a1aOjJ4=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["D:/react/Blogging/blogapp/src/Components/Posts/Posts.jsx"],"names":["React","useState","useContext","useEffect","Post","instance","PostsProivder","PostsContext","GroupContext","Posts","posts","setPosts","groups","Loading","setLoading","p","setP","get","then","res","prev","data","posts_to_view","console","log","length","map","name","forEach","g","id","group","title","message","updated_at","username"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,UAAzB,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,aAAT,EAAuBC,YAAvB,QAA2C,yCAA3C;AAEA,SAASC,YAAT,QAA6B,yCAA7B;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAIhB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBT,UAAU,CAACK,YAAD,CAAnC;AACA,QAAM,CAACK,MAAD,IAAWV,UAAU,CAACM,YAAD,CAA3B;AACA,QAAM,CAACK,OAAD,EAASC,UAAT,IAAuBb,QAAQ,CAAC,KAAD,CAArC;AAEA,QAAM,CAACc,CAAD,EAAGC,IAAH,IAAWf,QAAQ,CAACS,KAAD,CAAzB;AAGAP,EAAAA,SAAS,CAAG,MAAM;AACdE,IAAAA,QAAQ,CAACY,GAAT,CAAc,gBAAd,EAA+BC,IAA/B,CACIC,GAAG,IAAI;AACHH,MAAAA,IAAI,CAACI,IAAI,IAAIA,IAAI,GAAGD,GAAG,CAACE,IAApB,CAAJ;AACAP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAJL,EADc,CAOd;AACH,GARQ,EAQP,CAACJ,KAAD,CARO,CAAT;AAWA,MAAIY,aAAa,GAAG,EAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,CAAC,CAACU,MAAd;;AACA,MAAGV,CAAC,CAACU,MAAF,IAAY,CAAf,EACA;AACIH,IAAAA,aAAa,GAAIP,CAAC,CAACW,GAAF,CAAOX,CAAC,IAAI;AACzB,UAAIY,IAAI,GAAG,EAAX;AACCf,MAAAA,MAAM,CAACgB,OAAP,CAAeC,CAAC,IAAI;AACjB,YAAIA,CAAC,CAACC,EAAF,IAAQf,CAAC,CAACgB,KAAd,EACC;AACI,iBAAOJ,IAAI,GAAGE,CAAC,CAACF,IAAhB;AACH;AACL,OALA;AAMD,0BAAO,QAAC,IAAD;AAAiB,QAAA,EAAE,EAAEZ,CAAC,CAACe,EAAvB;AAA2B,QAAA,KAAK,EAAEf,CAAC,CAACiB,KAApC;AAA2C,QAAA,OAAO,EAAEjB,CAAC,CAACkB,OAAtD;AAA+D,QAAA,KAAK,EAAEN,IAAtE;AAA6E,QAAA,UAAU,EAAEZ,CAAC,CAACmB,UAA3F;AAAwG,QAAA,QAAQ,EAAEnB,CAAC,CAACoB;AAApH,SAAWpB,CAAC,CAACe,EAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KATgB,CAAjB;AAUH;;AAEDP,EAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cAEIT,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GACR;AAACS,MAAAA;AAAD;AAHH;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAhDD;;GAAMb,K;;KAAAA,K;AAkDN,eAAeA,KAAf","sourcesContent":["import React, { useState,useContext,useEffect } from 'react'\r\nimport Post from '../Post/Post';\r\nimport './Posts.css';\r\nimport instance from '../../axios';\r\nimport { PostsProivder,PostsContext } from '../../Context/PostsContext/PostsContext';\r\n\r\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\r\n\r\n\r\nconst Posts = () => {\r\n\r\n\r\n   \r\n    const [posts,setPosts] = useContext(PostsContext);\r\n    const [groups] = useContext(GroupContext);\r\n    const [Loading,setLoading] = useState(false);\r\n\r\n    const [p,setP] = useState(posts);\r\n    \r\n\r\n    useEffect ( () => {\r\n        instance.get(`api/posts/all/`).then(\r\n            res => {\r\n                setP(prev => prev = res.data);\r\n                setLoading(true);\r\n            }\r\n        )\r\n        // setP(posts);\r\n    },[posts])\r\n\r\n\r\n    var posts_to_view = [];\r\n    console.log(p.length);\r\n    if(p.length != 0)\r\n    {\r\n        posts_to_view =  p.map( p => {\r\n            var name = '';\r\n             groups.forEach(g => {\r\n                if( g.id == p.group)\r\n                 {\r\n                     return name = g.name;\r\n                 }\r\n            });\r\n            return <Post key={p.id} id={p.id} title={p.title} message={p.message} group={name}  updated_at={p.updated_at}  username={p.username} />\r\n        })\r\n    }\r\n    \r\n    console.log(posts_to_view);\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n           {\r\n            Loading ? <p> loading...</p> : \r\n           {posts_to_view}\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}