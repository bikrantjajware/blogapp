{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\Blogging\\\\blogapp\\\\src\\\\Pages\\\\Write\\\\Write.jsx\",\n    _s = $RefreshSig$();\n\nimport instance from '../../axios';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router';\nimport { UserContext } from '../../Context/User/UserContext';\nimport { PostsContext } from '../../Context/PostsContext/PostsContext';\nimport './Write.css';\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Write = () => {\n  _s();\n\n  useEffect(() => {}, []);\n  const [user, setUser] = useContext(UserContext);\n  const [posts, setPosts] = useContext(PostsContext);\n  const [groups] = useContext(GroupContext);\n  const groupOptions = groups.filter(g => g.members.includes(user.id));\n  const [title, setTitle] = useState('');\n  const [msg, setMsg] = useState('');\n  const [groupSelect, setgroupSelect] = useState('');\n  const token = user ? user.token : '';\n  const history = useHistory();\n\n  const postHandler = e => {\n    e.preventDefault();\n\n    if (user === undefined) {\n      history.push(\"/login\");\n      return;\n    }\n\n    console.log(groupSelect);\n    instance.post(`api/posts/create/`, {\n      title: title,\n      message: msg,\n      group: groupSelect != null ? parseInt(groupSelect) : ''\n    }, {\n      headers: {\n        Authorization: 'token ' + token\n      }\n    }).then(res => {\n      const newPost = { ...res.data\n      };\n      setPosts(prevPosts => [...prevPosts, newPost]);\n      setTitle('');\n      setMsg('');\n    }).catch(err => {\n      setTitle('');\n      setMsg('');\n      alert(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"write\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"writeForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"writeFormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          className: \"writeInput\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"writeFormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Write post...\",\n          type: \"text\",\n          value: msg,\n          onChange: e => setMsg(e.target.value),\n          className: \"writeInput writeText\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"writeFormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"writeInput\",\n          value: groupSelect,\n          onChange: e => setgroupSelect(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), groupOptions.map(g => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: g.id,\n            children: g.name\n          }, g.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 51\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"writeFormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"writeSubmit\",\n          onClick: postHandler,\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Write, \"dXdnzs1grRF1ecbzkFaKypW80MU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Write;\nexport default Write;\n\nvar _c;\n\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"sources":["D:/react/Blogging/blogapp/src/Pages/Write/Write.jsx"],"names":["instance","React","useState","useEffect","useContext","useHistory","UserContext","PostsContext","GroupContext","Write","user","setUser","posts","setPosts","groups","groupOptions","filter","g","members","includes","id","title","setTitle","msg","setMsg","groupSelect","setgroupSelect","token","history","postHandler","e","preventDefault","undefined","push","console","log","post","message","group","parseInt","headers","Authorization","then","res","newPost","data","prevPosts","catch","err","alert","target","value","map","name"],"mappings":"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","sourcesContent":["import instance from '../../axios';\r\nimport React,{useState,useEffect,useContext} from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\nimport { PostsContext } from '../../Context/PostsContext/PostsContext';\r\nimport './Write.css';\r\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\r\n\r\nconst Write = () => {\r\n\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n    \r\n    const [user,setUser] = useContext(UserContext);\r\n    const [posts,setPosts] = useContext(PostsContext);\r\n    const [groups] = useContext(GroupContext);\r\n    \r\n    const groupOptions = groups.filter( g =>  g.members.includes(user.id));\r\n    \r\n    \r\n    const [title,setTitle ]  = useState('');\r\n    const [msg,setMsg ]  = useState('');\r\n    const [groupSelect,setgroupSelect] = useState('');\r\n    const token = user? user.token : '';\r\n    \r\n    const history = useHistory();\r\n    const postHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if(user===undefined)\r\n        {\r\n            history.push(\"/login\");\r\n            return;\r\n        }\r\n        console.log(groupSelect);\r\n        \r\n        instance.post(`api/posts/create/`,\r\n            {\r\n                title: title,\r\n               message: msg,\r\n               group:groupSelect != null ? parseInt(groupSelect) :'',\r\n            },\r\n            {\r\n                headers: {\r\n                    Authorization: 'token '+token,\r\n                   },\r\n        }).then(\r\n            res => {\r\n                const newPost = {...res.data};\r\n                setPosts( prevPosts => [...prevPosts,newPost]);\r\n                setTitle('');\r\n                setMsg('');\r\n            }\r\n        ).catch ( err => {\r\n\r\n            setTitle('');\r\n            setMsg('');\r\n            alert(err);\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"write\">\r\n            <form className=\"writeForm\">\r\n                <div className=\"writeFormGroup\">\r\n                    <input type=\"text\" placeholder=\"Title\" value={title} onChange={ (e) => setTitle(e.target.value)} className=\"writeInput\" autoFocus={true} />\r\n                </div>\r\n                <div className=\"writeFormGroup\">\r\n                    <textarea placeholder=\"Write post...\" type=\"text\" value={msg} onChange={ (e) => setMsg(e.target.value)} className=\"writeInput writeText\">\r\n                    </textarea>\r\n                </div>\r\n                <div className=\"writeFormGroup\">\r\n                    <select className=\"writeInput\" value={groupSelect} onChange = { (e) => setgroupSelect(e.target.value) }>\r\n                        <option value={null} ></option>\r\n                        { groupOptions.map ( g => <option key={g.id} value={g.id} >{g.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"writeFormGroup\">\r\n                <button type=\"submit\" className=\"writeSubmit\" onClick={postHandler}>Post</button>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Write\r\n"]},"metadata":{},"sourceType":"module"}