{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\Blogging\\\\blogapp\\\\src\\\\Pages\\\\Login\\\\login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport './login.css';\nimport { Link, useHistory } from 'react-router-dom';\nimport instance from '../../axios';\nimport { UserContext } from '../../Context/User/UserContext';\nimport { PostsContext } from '../../Context/PostsContext/PostsContext';\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\nimport Loader from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const [user, setUser] = useContext(UserContext);\n  const [posts, setPosts] = useContext(PostsContext);\n  const [groups, setGroups] = useContext(GroupContext);\n\n  const loginHandler = async e => {\n    e.preventDefault();\n    setLoading(true);\n    await instance.post(`api/accounts/token`, {\n      username: username,\n      password: password\n    }).then(res => {\n      if (res.data) {\n        const token = res.data.token;\n\n        (async () => {\n          await instance.get(`api/accounts/login`, {\n            headers: {\n              Authorization: 'token ' + token\n            }\n          }).then(res => {\n            if (res.data) {\n              setUser({\n                username: res.data.username,\n                password: password,\n                email: res.data.email,\n                id: res.data.pk,\n                token: token\n              });\n            }\n          });\n        })();\n\n        (async () => {\n          await instance.get(`api/groups/all`, {\n            headers: {\n              Authorization: 'token ' + token\n            }\n          }).then(res => {\n            setGroups(res.data);\n          });\n        })();\n      }\n    }).catch(error => {\n      history.push('/logout');\n    });\n    setLoading(false);\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"loginTitle\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      className: \"loginForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => {\n          setUsername(e.target.value);\n        },\n        placeholder: \"enter your username...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => {\n          setPassword(e.target.value);\n        },\n        placeholder: \"enter password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {\n        className: \"loader\",\n        type: \"ThreeDots\",\n        color: \"#00BFFF\",\n        height: window.innerHeight / 8,\n        width: window.innerWidth / 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginButton\",\n        onClick: loginHandler,\n        children: \" Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginRegisterButton\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link\",\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"C+3KuopUZsEOFy5UfDAdrOyCSuA=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/react/Blogging/blogapp/src/Pages/Login/login.jsx"],"names":["React","useState","useContext","Link","useHistory","instance","UserContext","PostsContext","GroupContext","Loader","Login","username","setUsername","password","setPassword","loading","setLoading","history","user","setUser","posts","setPosts","groups","setGroups","loginHandler","e","preventDefault","post","then","res","data","token","get","headers","Authorization","email","id","pk","catch","error","push","target","value","window","innerHeight","innerWidth"],"mappings":"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","sourcesContent":["import React,{useState,useContext} from 'react'\r\nimport './login.css';\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport instance from '../../axios';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\nimport { PostsContext } from '../../Context/PostsContext/PostsContext';\r\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [username,setUsername] = useState(\"\")\r\n    const [password,setPassword] = useState(\"\")\r\n    const [loading,setLoading] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const [user,setUser] = useContext(UserContext);\r\n    const [posts,setPosts] = useContext(PostsContext);\r\n    const [groups,setGroups] = useContext(GroupContext);\r\n\r\n    const loginHandler = async (e)  => {\r\n        \r\n        e.preventDefault();\r\n        setLoading(true);\r\n       \r\n        await instance.post(`api/accounts/token`,{\r\n        username:username,\r\n        password:password,\r\n        }).then( res => {\r\n            \r\n            if(res.data)\r\n            {\r\n                const token = res.data.token;\r\n                (async () =>{\r\n                    await instance.get(`api/accounts/login`,\r\n                       { \r\n                           headers: {\r\n                            Authorization: 'token '+token,\r\n                           }\r\n                    }).then( res => {\r\n                        if( res.data)\r\n                        {\r\n                            setUser({\r\n                                username: res.data.username,\r\n                                password:password,\r\n                                email: res.data.email,\r\n                                id: res.data.pk,\r\n                                token:token,\r\n                            })\r\n                            \r\n                            \r\n                        }\r\n                        \r\n                    })\r\n                } )();\r\n\r\n                    \r\n                     (async () => {\r\n                       await instance.get(`api/groups/all`,{\r\n                            headers : {\r\n                                Authorization: 'token '+token,\r\n                            }\r\n                        }).then(\r\n                            res => {\r\n                                setGroups(res.data);\r\n                            }\r\n                        )\r\n                     } )();\r\n\r\n                    \r\n\r\n            }\r\n        }).catch( error =>{\r\n            history.push('/logout');\r\n            \r\n        })\r\n\r\n        setLoading(false)\r\n        history.push(\"/\");\r\n    \r\n\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <span className=\"loginTitle\">Login</span>\r\n            <form action=\"\" className=\"loginForm\">\r\n                <label>\r\n                    Username\r\n                </label>\r\n                <input type=\"text\"  value={username} onChange={ (e) => { setUsername(e.target.value)}} placeholder=\"enter your username...\" />\r\n                <label>\r\n                    Password\r\n                </label>\r\n                <input type=\"password\"  value={password} onChange={ (e) => { setPassword(e.target.value)}} placeholder=\"enter password\" />\r\n               {loading ? <Loader\r\n                    className=\"loader\"\r\n                    type=\"ThreeDots\"\r\n                    color=\"#00BFFF\"\r\n                    height={window.innerHeight/8}\r\n                    width={window.innerWidth/8}\r\n          />: <button className=\"loginButton\" onClick={loginHandler} > Login</button>}\r\n                <button className=\"loginRegisterButton\"> <Link className=\"link\" to=\"/register\">Register</Link></button>\r\n               \r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}