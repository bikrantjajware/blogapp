[{"D:\\react\\Blogging\\blogapp\\src\\index.js":"1","D:\\react\\Blogging\\blogapp\\src\\App.js":"2","D:\\react\\Blogging\\blogapp\\src\\reportWebVitals.js":"3","D:\\react\\Blogging\\blogapp\\src\\Pages\\Home\\Home.jsx":"4","D:\\react\\Blogging\\blogapp\\src\\Components\\Posts\\Posts.jsx":"5","D:\\react\\Blogging\\blogapp\\src\\Components\\Post\\Post.jsx":"6","D:\\react\\Blogging\\blogapp\\src\\Pages\\Single\\Single.jsx":"7","D:\\react\\Blogging\\blogapp\\src\\Components\\SinglePosts\\SinglePost.jsx":"8","D:\\react\\Blogging\\blogapp\\src\\Components\\Topbar\\Topbar.jsx":"9","D:\\react\\Blogging\\blogapp\\src\\Pages\\Write\\Write.jsx":"10","D:\\react\\Blogging\\blogapp\\src\\Pages\\Settings\\Settings.jsx":"11","D:\\react\\Blogging\\blogapp\\src\\Pages\\Login\\login.jsx":"12","D:\\react\\Blogging\\blogapp\\src\\Pages\\Register\\register.jsx":"13","D:\\react\\Blogging\\blogapp\\src\\Components\\Header\\Header.jsx":"14","D:\\react\\Blogging\\blogapp\\src\\Pages\\Logout\\Logout.jsx":"15","D:\\react\\Blogging\\blogapp\\src\\Context\\User\\UserContext.js":"16","D:\\react\\Blogging\\blogapp\\src\\Context\\PostsContext\\PostsContext.js":"17","D:\\react\\Blogging\\blogapp\\src\\Components\\Sidebar\\Sidebar.jsx":"18","D:\\react\\Blogging\\blogapp\\src\\Components\\Group\\Group.jsx":"19","D:\\react\\Blogging\\blogapp\\src\\Context\\GroupContext\\GroupContext.js":"20"},{"size":571,"mtime":1632316031609,"results":"21","hashOfConfig":"22"},{"size":1831,"mtime":1632376175617,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":836,"mtime":1632376955126,"results":"25","hashOfConfig":"22"},{"size":1241,"mtime":1632399096639,"results":"26","hashOfConfig":"22"},{"size":879,"mtime":1632400323800,"results":"27","hashOfConfig":"22"},{"size":400,"mtime":1632315658490,"results":"28","hashOfConfig":"22"},{"size":2669,"mtime":1632470033994,"results":"29","hashOfConfig":"22"},{"size":1681,"mtime":1632325252023,"results":"30","hashOfConfig":"22"},{"size":3048,"mtime":1632401807913,"results":"31","hashOfConfig":"22"},{"size":985,"mtime":1632156623082,"results":"32","hashOfConfig":"22"},{"size":3833,"mtime":1632381858634,"results":"33","hashOfConfig":"22"},{"size":3648,"mtime":1632385258995,"results":"34","hashOfConfig":"22"},{"size":380,"mtime":1632145414386,"results":"35","hashOfConfig":"22"},{"size":224,"mtime":1632221013536,"results":"36","hashOfConfig":"22"},{"size":298,"mtime":1632222034349,"results":"37","hashOfConfig":"22"},{"size":312,"mtime":1632375685864,"results":"38","hashOfConfig":"22"},{"size":3492,"mtime":1632469542391,"results":"39","hashOfConfig":"22"},{"size":2376,"mtime":1632469509074,"results":"40","hashOfConfig":"22"},{"size":348,"mtime":1632376511303,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1uvk9an",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\react\\Blogging\\blogapp\\src\\index.js",[],["90","91"],"D:\\react\\Blogging\\blogapp\\src\\App.js",["92"],"\nimport './App.css';\nimport Home from './Pages/Home/Home';\nimport Topbar from './Components/Topbar/Topbar';\nimport Write from './Pages/Write/Write';\nimport Settings from './Pages/Settings/Settings';\nimport Login from './Pages/Login/login';\nimport Register from './Pages/Register/register';\nimport Logout from './Pages/Logout/Logout';\nimport { useContext } from 'react';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Single from './Pages/Single/Single';\nimport { UserProivder,UserContext } from './Context/User/UserContext';\nimport { PostsProivder } from './Context/PostsContext/PostsContext';\nimport { GroupProvider } from './Context/GroupContext/GroupContext';\n\n\n\nfunction App() {\n\n\n\n\n\n  const [user,setUser] =  useContext(UserContext);\n  return (\n    <Router>\n        <UserProivder>\n          <PostsProivder>\n            <GroupProvider>\n                <Topbar />\n\n        <Switch>\n          <Route exact path=\"/\">\n            \n            <Home/>\n          </Route>\n          <Route exact path=\"/register\">\n            {user ? <Home/> : <Register/>}\n          </Route>\n          <Route exact path=\"/login\">\n            {user? <Home/> : <Login/>}\n          </Route>\n          <Route exact path=\"/write\">\n            {user ? <Write/>: <Register/>}\n          </Route>\n          <Route exact path=\"/settings\">\n            {user ? <Settings/> : <Register/>}\n          </Route>\n          <Route exact path=\"/post/:postID\">\n            <Single />\n          </Route>\n          <Route exact path=\"/logout\">\n            <Logout/>\n          </Route>\n\n          </Switch>\n        {/* <Home/> */}\n        {/* <Write/> */}\n        {/* <Settings/> */}\n        {/* <Register /> */}\n        </GroupProvider>\n        </PostsProivder>\n        </UserProivder>\n    </Router>\n     \n    \n  );\n}\n\nexport default App;\n","D:\\react\\Blogging\\blogapp\\src\\reportWebVitals.js",[],"D:\\react\\Blogging\\blogapp\\src\\Pages\\Home\\Home.jsx",[],"D:\\react\\Blogging\\blogapp\\src\\Components\\Posts\\Posts.jsx",["93","94","95","96","97","98","99"],"import React, { useState,useContext,useEffect } from 'react'\r\nimport Post from '../Post/Post';\r\nimport './Posts.css';\r\nimport { PostsProivder,PostsContext } from '../../Context/PostsContext/PostsContext';\r\n\r\nimport axios from 'axios';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\r\n\r\nconst allPostURL = 'http://127.0.0.1:8000/api/posts/all/';\r\n\r\nconst Posts = () => {\r\n\r\n\r\n   \r\n    const [posts,setPosts] = useContext(PostsContext);\r\n    const [groups] = useContext(GroupContext);\r\n\r\n    const [p,setP] = useState(posts);\r\n    // [user,setUser] = useContext(UserContext);\r\n\r\n    useEffect ( () => {\r\n        setP(posts);\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n           { p.map( p => {\r\n               var name = '';\r\n                groups.forEach(g => {\r\n                   if( g.id == p.group)\r\n                    {\r\n                        return name = g.name;\r\n                    }\r\n               });\r\n               return <Post key={p.id} id={p.id} title={p.title} message={p.message} group={name}  updated_at={p.updated_at}  username={p.username} />\r\n           })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","D:\\react\\Blogging\\blogapp\\src\\Components\\Post\\Post.jsx",[],"D:\\react\\Blogging\\blogapp\\src\\Pages\\Single\\Single.jsx",[],"D:\\react\\Blogging\\blogapp\\src\\Components\\SinglePosts\\SinglePost.jsx",["100","101","102"],"D:\\react\\Blogging\\blogapp\\src\\Components\\Topbar\\Topbar.jsx",[],"D:\\react\\Blogging\\blogapp\\src\\Pages\\Write\\Write.jsx",["103","104"],"import axios from 'axios';\r\nimport React,{useState,useContext} from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\nimport { PostsContext } from '../../Context/PostsContext/PostsContext';\r\nimport './Write.css';\r\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\r\n\r\nconst Write = () => {\r\n\r\n    const postURL = 'http://127.0.0.1:8000/api/posts/create/'\r\n    \r\n    const [user,setUser] = useContext(UserContext);\r\n    const [posts,setPosts] = useContext(PostsContext);\r\n    const [groups] = useContext(GroupContext);\r\n    \r\n    const groupOptions = groups.filter( g =>  g.members.includes(user.id));\r\n    \r\n    \r\n    const [title,setTitle ]  = useState('');\r\n    const [msg,setMsg ]  = useState('');\r\n    const [groupSelect,setgroupSelect] = useState('');\r\n    const token = user? user.token : '';\r\n    \r\n    const history = useHistory();\r\n    const postHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if(user===undefined)\r\n        {\r\n            history.push(\"/login\");\r\n            return;\r\n        }\r\n        console.log(groupSelect);\r\n        \r\n        axios.post(postURL,\r\n            {\r\n                title: title,\r\n               message: msg,\r\n               group:groupSelect != null ? parseInt(groupSelect) :'',\r\n            },\r\n            {\r\n                headers: {\r\n                    Authorization: 'token '+token,\r\n                   },\r\n        }).then(\r\n            res => {\r\n                const newPost = {...res.data};\r\n                setPosts( prevPosts => [...prevPosts,newPost]);\r\n                setTitle('');\r\n                setMsg('');\r\n            }\r\n        ).catch ( err => {\r\n\r\n            setTitle('');\r\n            setMsg('');\r\n            alert(err);\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"write\">\r\n            <form className=\"writeForm\">\r\n                <div className=\"writeFormGroup\">\r\n                    <input type=\"text\" placeholder=\"Title\" value={title} onChange={ (e) => setTitle(e.target.value)} className=\"writeInput\" autoFocus={true} />\r\n                </div>\r\n                <div className=\"writeFormGroup\">\r\n                    <textarea placeholder=\"Write post...\" type=\"text\" value={msg} onChange={ (e) => setMsg(e.target.value)} className=\"writeInput writeText\">\r\n                    </textarea>\r\n                </div>\r\n                <div className=\"writeFormGroup\">\r\n                    <select className=\"writeInput\" value={groupSelect} onChange = { (e) => setgroupSelect(e.target.value) }>\r\n                        <option value={null} ></option>\r\n                        { groupOptions.map ( g => <option key={g.id} value={g.id} >{g.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"writeFormGroup\">\r\n                <button type=\"submit\" className=\"writeSubmit\" onClick={postHandler}>Post</button>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Write\r\n","D:\\react\\Blogging\\blogapp\\src\\Pages\\Settings\\Settings.jsx",[],"D:\\react\\Blogging\\blogapp\\src\\Pages\\Login\\login.jsx",["105","106","107"],"import React,{useState,useContext} from 'react'\r\nimport './login.css';\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\nimport { PostsContext } from '../../Context/PostsContext/PostsContext';\r\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\r\n\r\n\r\nconst allPostURL = 'http://127.0.0.1:8000/api/posts/all/';\r\nconst allGroupsURL = 'http://127.0.0.1:8000/api/groups/all';\r\n\r\nconst Login = () => {\r\n\r\n    const [username,setUsername] = useState(\"\")\r\n    const [password,setPassword] = useState(\"\")\r\n\r\n    const history = useHistory();\r\n\r\n    const [user,setUser] = useContext(UserContext);\r\n    const [posts,setPosts] = useContext(PostsContext);\r\n    const [groups,setGroups] = useContext(GroupContext);\r\n\r\n    const loginHandler = (e) => {\r\n        \r\n        e.preventDefault();\r\n     \r\n       \r\n        axios.post('http://127.0.0.1:8000/api/accounts/token',{\r\n        username:username,\r\n        password:password,\r\n        }).then( res => {\r\n            \r\n            if(res.data)\r\n            {\r\n                const token = res.data.token;\r\n                \r\n                axios.get('http://127.0.0.1:8000/api/accounts/login',\r\n                       { \r\n                           headers: {\r\n                            Authorization: 'token '+token,\r\n                           }\r\n                    }).then( res => {\r\n                        if( res.data)\r\n                        {\r\n                            setUser({\r\n                                username: res.data.user.username,\r\n                                password:password,\r\n                                email: res.data.user.password,\r\n                                id: res.data.user.pk,\r\n                                bio: res.data.bio,\r\n                                phone: res.data.phone,\r\n                                token:token,\r\n                            })\r\n                            \r\n                            history.push(\"/\");\r\n                        }\r\n                        \r\n                    })\r\n\r\n\r\n                    axios.get(allPostURL,{\r\n                        headers : {\r\n                            Authorization: 'token '+token,\r\n                        }\r\n                    }).then(\r\n                        res => {\r\n                            setPosts(res.data);\r\n                        }\r\n                    )\r\n\r\n\r\n                    axios.get(allGroupsURL,{\r\n                        headers : {\r\n                            Authorization: 'token '+token,\r\n                        }\r\n                    }).then(\r\n                        res => {\r\n                            setGroups(res.data);\r\n                        }\r\n                    )\r\n\r\n            }\r\n        }).catch( error =>{\r\n            history.push('/logout');\r\n            \r\n        })\r\n\r\n\r\n       \r\n\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <span className=\"loginTitle\">Login</span>\r\n            <form action=\"\" className=\"loginForm\">\r\n                <label>\r\n                    Username\r\n                </label>\r\n                <input type=\"text\"  value={username} onChange={ (e) => { setUsername(e.target.value)}} placeholder=\"enter your username...\" />\r\n                <label>\r\n                    Password\r\n                </label>\r\n                <input type=\"password\"  value={password} onChange={ (e) => { setPassword(e.target.value)}} placeholder=\"enter password\" />\r\n                <button className=\"loginButton\" onClick={loginHandler} > Login</button>\r\n                <button className=\"loginRegisterButton\"> <Link className=\"link\" to=\"/register\">Register</Link></button>\r\n               \r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","D:\\react\\Blogging\\blogapp\\src\\Pages\\Register\\register.jsx",["108"],"import React,{useState,useContext} from 'react'\r\nimport './register.css';\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\n\r\n\r\n\r\nconst registerURL = 'http://127.0.0.1:8000/api/accounts/register'\r\n\r\n\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const [username,setUsername] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [password2,setPassword2] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const history = useHistory();\r\n\r\n\r\n    const [user,setUser] = useContext(UserContext);\r\n    const registerUser = (e) => {\r\n        \r\n       e.preventDefault();\r\n       if(password===\"\" || username===\"\" || email===\"\")\r\n       {\r\n           alert(\"Input fields cannot be empty\")\r\n           return;\r\n       }\r\n       if( password !==password2)\r\n        {\r\n            alert(\"password do not match\")\r\n            return;\r\n        }\r\n        const validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n        if(!email.match(validRegex))\r\n        {\r\n            alert(\"invalid email\")\r\n            return;\r\n        }\r\n        \r\n        \r\n        \r\n        axios.post(registerURL,{\r\n            username:username,\r\n            email : email,\r\n            password:password,\r\n            password2:password2,\r\n            \r\n        }).then(\r\n            res => {\r\n                \r\n                if(res.data.response && res.data.response.includes(\"successfully\"))\r\n                {\r\n                    setUser({\r\n                        username:res.data.username,\r\n                        email:res.data.email,\r\n                        password:res.data.password,\r\n                        token : res.data.token,\r\n                        message : res.data.response,\r\n                    })\r\n                    history.push(\"/\");\r\n                }\r\n                else{\r\n                    var msg = \"\";\r\n                    msg += res.data.username? res.data.username + '\\n':\"\";\r\n                    msg += res.data.email ? res.data.email + '\\n' : \"\";\r\n                    msg += res.data.password ? res.data.password + '\\n' : \"\";\r\n                    alert(msg);\r\n                }\r\n               \r\n                \r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"register\">\r\n            <span className=\"registerTitle\">Register</span>\r\n            <form action=\"\" className=\"registerForm\">\r\n                <label>\r\n                    Username\r\n                </label>\r\n                <input type=\"text\" value={username} onChange= { (e)=> setUsername(e.target.value)} placeholder=\"Enter your username...\" />\r\n                <label>\r\n                    Email\r\n                </label>\r\n                <input type=\"email\" value={email} onChange= { (e)=> setEmail(e.target.value)} placeholder=\"Enter your email...\" />\r\n                <label>\r\n                    Password\r\n                </label>\r\n                <input type=\"password\" value={password} onChange= { (e)=> setPassword(e.target.value)} placeholder=\"Enter password\" />\r\n                <label>\r\n                    Confirm Password\r\n                </label>\r\n                <input type=\"password\" value={password2} onChange= { (e)=> setPassword2(e.target.value)}  placeholder=\"Confirm password\" />\r\n                <button className=\"registerButton\" onClick={registerUser} > Register</button>\r\n                <button className=\"registerLoginButton\"> <Link className=\"link\" to=\"/login\">Login</Link></button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","D:\\react\\Blogging\\blogapp\\src\\Components\\Header\\Header.jsx",[],"D:\\react\\Blogging\\blogapp\\src\\Pages\\Logout\\Logout.jsx",[],"D:\\react\\Blogging\\blogapp\\src\\Context\\User\\UserContext.js",[],"D:\\react\\Blogging\\blogapp\\src\\Context\\PostsContext\\PostsContext.js",[],"D:\\react\\Blogging\\blogapp\\src\\Components\\Sidebar\\Sidebar.jsx",["109","110","111","112","113"],"import React,{useContext,useState} from 'react'\r\nimport './Sidebar.css';\r\nimport { useHistory, } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\r\nimport Group from '../Group/Group';\r\n\r\nconst allGroupsURL = 'http://127.0.0.1:8000/api/groups/all'\r\nconst addGroupURL = 'http://127.0.0.1:8000/api/groups/new/';\r\n\r\nconst postURL = 'http://127.0.0.1:8000/api/posts/create/'\r\n\r\nconst Sidebar = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [name,setName]= useState('');\r\n    const [desc,setDesc]  = useState('');\r\n    const [clickCreate,setclickCreate] = useState(false) ;\r\n\r\n    const [user] = useContext(UserContext);\r\n    \r\n    const [groups,setGroups] = useContext(GroupContext);\r\n    \r\n    const token = user ? user.token : '';\r\n    \r\n\r\n\r\n    const loadGroups = (token) => {\r\n        if(token=='' || token==undefined)\r\n        {\r\n            history.push('/login');\r\n            return;\r\n        }\r\n    \r\n        axios.get(allGroupsURL,{\r\n            headers : {\r\n                Authorization : 'token '+token,\r\n            }\r\n        }).then( res => {\r\n            setGroups( prev => prev = res.data);\r\n        })\r\n\r\n    }\r\n // if(token == undefined || token=='')\r\n        // {\r\n        //     history.push(\"/login\");\r\n        // }\r\n\r\n    const addGroupHandler = (event,token) => {\r\n\r\n        event.preventDefault();\r\n    \r\n        \r\n        if(token == undefined || token=='')\r\n        {\r\n            history.push('/login');\r\n            return;\r\n        }\r\n       \r\n        axios.post(addGroupURL,\r\n            {\r\n                name: name,\r\n                description: desc,\r\n            },\r\n            {\r\n                headers: {\r\n                    Authorization: 'token '+token,\r\n                   },\r\n        }).then( res => {\r\n            console.log(res.data);\r\n            setName('');\r\n            setDesc('');\r\n        }).catch( err => {\r\n            console.log(err);\r\n            setName('');\r\n            setDesc('');\r\n        })\r\n\r\n\r\n        loadGroups(token);\r\n    }\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            {clickCreate ? <div>\r\n                <form className=\"createGroup\" id=\"newGroup\">\r\n                    <div className=\"createGroupForm\">\r\n                    <input type=\"text\" className=\"groupInput\" placeholder=\"Enter Group Name...\" value={name} onChange={e => setName(e.target.value)}/>\r\n                    <textarea type=\"text\" className=\"groupInput\"  placeholder=\"Enter Group Description...\" value={desc} onChange={e => setDesc(e.target.value)} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"groupSubmit\" onClick={(e) => addGroupHandler(e,token)}>create</button>\r\n                </form>\r\n            </div> : \"\"}\r\n           <div className=\"groupControls\">\r\n            <i onClick={ () => setclickCreate(!clickCreate)} className=\"addGroup fas fa-plus-circle\"  ></i>\r\n            <i   onClick={ () => loadGroups(token) } className=\"reload fas fa-redo\"></i>\r\n           </div>\r\n            \r\n            { groups.map( g => {\r\n               return <Group key={g.id} name={g.name} reload={(token) => loadGroups(token)} desc={g.description} members={g.members.length} posts={g.posts.length} slug={g.slug} isJoined={g.members.includes(user.id)} />\r\n            })}\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","D:\\react\\Blogging\\blogapp\\src\\Components\\Group\\Group.jsx",["114","115","116","117","118"],"import React,{useContext} from 'react'\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\r\nimport './Group.css';\r\n\r\nimport axios from 'axios';\r\n\r\n// return <Group key={g.id} name={g.name} desc={g.description} members={g.members.count} posts={g.posts.length} />\r\nconst groupLeave = (slug) => `http://127.0.0.1:8000/api/groups/leave/${slug}`;\r\nconst groupJoin = (slug) => `http://127.0.0.1:8000/api/groups/join/${slug}`;\r\nconst allGroupsURL = 'http://127.0.0.1:8000/api/groups/alljoined';\r\n\r\n\r\n\r\nconst Group = (props) => {\r\n\r\n    const [user] = useContext(UserContext);\r\n    const [groups,setGroups] = useContext(UserContext);\r\n    const token = user ? user.token : '';\r\n    const history = useHistory();\r\n   \r\n\r\n   \r\n    const exitHandlder = (slug) => {\r\n        const url = groupLeave(slug);\r\n        axios.get(url,{\r\n            headers : {\r\n                Authorization : 'token '+token,\r\n            }\r\n        });\r\n        props.reload(token);\r\n\r\n    }\r\n\r\n    const joinHandler = (slug) => {\r\n       \r\n        const url = groupJoin(slug);\r\n        axios.get(url,{\r\n            headers : {\r\n                Authorization : 'token '+token,\r\n            }\r\n        });\r\n\r\n        props.reload(token);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"group\">\r\n                <div className=\"groupHead\">\r\n                    <span className=\"groupTitle\">\r\n                        <Link className=\"link\" to={`/group/${props.id}`} > {props.name} </Link>\r\n                    </span>\r\n                 { props.isJoined ? <span className=\"groupExit\"> <i onClick={() => exitHandlder(props.slug) } className=\"fas fa-sign-out-alt\"></i> </span>\r\n                    : <span className=\"groupJoin\"> <i onClick={() => joinHandler(props.slug) } className=\"fas fa-user-plus\"></i> </span>}\r\n                </div>\r\n                <hr />\r\n                <div className=\"groupMeta\">\r\n                    <span className=\"groupdate\"> members: {props.members}</span>\r\n                    <span className=\"groupdate\">  posts:{props.posts}</span>\r\n                </div>\r\n\r\n            <p className=\"groupdesc\">\r\n                {props.desc}\r\n            </p>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Group\r\n","D:\\react\\Blogging\\blogapp\\src\\Context\\GroupContext\\GroupContext.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":25,"column":15,"nodeType":"125","messageId":"126","endLine":25,"endColumn":22},{"ruleId":"123","severity":1,"message":"127","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":23},{"ruleId":"123","severity":1,"message":"128","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":13},{"ruleId":"123","severity":1,"message":"129","line":7,"column":10,"nodeType":"125","messageId":"126","endLine":7,"endColumn":21},{"ruleId":"123","severity":1,"message":"130","line":10,"column":7,"nodeType":"125","messageId":"126","endLine":10,"endColumn":17},{"ruleId":"123","severity":1,"message":"131","line":16,"column":18,"nodeType":"125","messageId":"126","endLine":16,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":22,"column":5,"nodeType":"125","endLine":22,"endColumn":14,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":32,"column":29,"nodeType":"137","messageId":"138","endLine":32,"endColumn":31},{"ruleId":"123","severity":1,"message":"124","line":49,"column":17,"nodeType":"125","messageId":"126","endLine":49,"endColumn":24},{"ruleId":"123","severity":1,"message":"139","line":52,"column":9,"nodeType":"125","messageId":"126","endLine":52,"endColumn":14},{"ruleId":"135","severity":1,"message":"136","line":55,"column":26,"nodeType":"137","messageId":"138","endLine":55,"endColumn":28},{"ruleId":"123","severity":1,"message":"124","line":13,"column":17,"nodeType":"125","messageId":"126","endLine":13,"endColumn":24},{"ruleId":"123","severity":1,"message":"140","line":14,"column":12,"nodeType":"125","messageId":"126","endLine":14,"endColumn":17},{"ruleId":"123","severity":1,"message":"141","line":20,"column":12,"nodeType":"125","messageId":"126","endLine":20,"endColumn":16},{"ruleId":"123","severity":1,"message":"140","line":21,"column":12,"nodeType":"125","messageId":"126","endLine":21,"endColumn":17},{"ruleId":"123","severity":1,"message":"142","line":22,"column":12,"nodeType":"125","messageId":"126","endLine":22,"endColumn":18},{"ruleId":"123","severity":1,"message":"141","line":23,"column":12,"nodeType":"125","messageId":"126","endLine":23,"endColumn":16},{"ruleId":"123","severity":1,"message":"143","line":12,"column":7,"nodeType":"125","messageId":"126","endLine":12,"endColumn":14},{"ruleId":"135","severity":1,"message":"136","line":31,"column":17,"nodeType":"137","messageId":"138","endLine":31,"endColumn":19},{"ruleId":"135","severity":1,"message":"136","line":31,"column":30,"nodeType":"137","messageId":"138","endLine":31,"endColumn":32},{"ruleId":"135","severity":1,"message":"136","line":56,"column":18,"nodeType":"137","messageId":"138","endLine":56,"endColumn":20},{"ruleId":"135","severity":1,"message":"136","line":56,"column":39,"nodeType":"137","messageId":"138","endLine":56,"endColumn":41},{"ruleId":"123","severity":1,"message":"144","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":22},{"ruleId":"123","severity":1,"message":"145","line":12,"column":7,"nodeType":"125","messageId":"126","endLine":12,"endColumn":19},{"ruleId":"123","severity":1,"message":"142","line":19,"column":12,"nodeType":"125","messageId":"126","endLine":19,"endColumn":18},{"ruleId":"123","severity":1,"message":"146","line":19,"column":19,"nodeType":"125","messageId":"126","endLine":19,"endColumn":28},{"ruleId":"123","severity":1,"message":"147","line":21,"column":11,"nodeType":"125","messageId":"126","endLine":21,"endColumn":18},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","'PostsProivder' is defined but never used.","'axios' is defined but never used.","'UserContext' is defined but never used.","'allPostURL' is assigned a value but never used.","'setPosts' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setP'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [posts] as a second argument to the useEffect Hook.",["150"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'index' is assigned a value but never used.","'posts' is assigned a value but never used.","'user' is assigned a value but never used.","'groups' is assigned a value but never used.","'postURL' is assigned a value but never used.","'GroupContext' is defined but never used.","'allGroupsURL' is assigned a value but never used.","'setGroups' is assigned a value but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},"Add dependencies array: [posts]",{"range":"153","text":"154"},[717,717],", [posts]"]