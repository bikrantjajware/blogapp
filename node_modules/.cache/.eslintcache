[{"D:\\react\\Blogging\\blogapp\\src\\index.js":"1","D:\\react\\Blogging\\blogapp\\src\\App.js":"2","D:\\react\\Blogging\\blogapp\\src\\reportWebVitals.js":"3","D:\\react\\Blogging\\blogapp\\src\\Pages\\Home\\Home.jsx":"4","D:\\react\\Blogging\\blogapp\\src\\Components\\Posts\\Posts.jsx":"5","D:\\react\\Blogging\\blogapp\\src\\Components\\Post\\Post.jsx":"6","D:\\react\\Blogging\\blogapp\\src\\Pages\\Single\\Single.jsx":"7","D:\\react\\Blogging\\blogapp\\src\\Components\\SinglePosts\\SinglePost.jsx":"8","D:\\react\\Blogging\\blogapp\\src\\Components\\Topbar\\Topbar.jsx":"9","D:\\react\\Blogging\\blogapp\\src\\Pages\\Write\\Write.jsx":"10","D:\\react\\Blogging\\blogapp\\src\\Pages\\Settings\\Settings.jsx":"11","D:\\react\\Blogging\\blogapp\\src\\Pages\\Login\\login.jsx":"12","D:\\react\\Blogging\\blogapp\\src\\Pages\\Register\\register.jsx":"13","D:\\react\\Blogging\\blogapp\\src\\Components\\Header\\Header.jsx":"14","D:\\react\\Blogging\\blogapp\\src\\Pages\\Logout\\Logout.jsx":"15","D:\\react\\Blogging\\blogapp\\src\\Context\\User\\UserContext.js":"16","D:\\react\\Blogging\\blogapp\\src\\Context\\PostsContext\\PostsContext.js":"17","D:\\react\\Blogging\\blogapp\\src\\Components\\Sidebar\\Sidebar.jsx":"18","D:\\react\\Blogging\\blogapp\\src\\Components\\Group\\Group.jsx":"19","D:\\react\\Blogging\\blogapp\\src\\Context\\GroupContext\\GroupContext.js":"20","D:\\react\\Blogging\\blogapp\\src\\axios.js":"21","D:\\react\\Blogging\\blogapp\\src\\Pages\\Error\\Error.jsx":"22"},{"size":571,"mtime":1632316031609,"results":"23","hashOfConfig":"24"},{"size":1954,"mtime":1632752585243,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":838,"mtime":1632744151497,"results":"27","hashOfConfig":"24"},{"size":1912,"mtime":1632752559476,"results":"28","hashOfConfig":"24"},{"size":1165,"mtime":1632811318758,"results":"29","hashOfConfig":"24"},{"size":404,"mtime":1632752618582,"results":"30","hashOfConfig":"24"},{"size":4620,"mtime":1632811441092,"results":"31","hashOfConfig":"24"},{"size":1388,"mtime":1632807579510,"results":"32","hashOfConfig":"24"},{"size":3027,"mtime":1632749029327,"results":"33","hashOfConfig":"24"},{"size":985,"mtime":1632156623082,"results":"34","hashOfConfig":"24"},{"size":4628,"mtime":1632752000737,"results":"35","hashOfConfig":"24"},{"size":3602,"mtime":1632736924699,"results":"36","hashOfConfig":"24"},{"size":380,"mtime":1632145414386,"results":"37","hashOfConfig":"24"},{"size":224,"mtime":1632221013536,"results":"38","hashOfConfig":"24"},{"size":298,"mtime":1632222034349,"results":"39","hashOfConfig":"24"},{"size":312,"mtime":1632375685864,"results":"40","hashOfConfig":"24"},{"size":3897,"mtime":1632812622206,"results":"41","hashOfConfig":"24"},{"size":2154,"mtime":1632742852678,"results":"42","hashOfConfig":"24"},{"size":348,"mtime":1632376511303,"results":"43","hashOfConfig":"24"},{"size":130,"mtime":1632737183015,"results":"44","hashOfConfig":"24"},{"size":525,"mtime":1632752064752,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1uvk9an",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},"D:\\react\\Blogging\\blogapp\\src\\index.js",[],["98","99"],"D:\\react\\Blogging\\blogapp\\src\\App.js",["100"],"\nimport './App.css';\nimport Home from './Pages/Home/Home';\nimport Topbar from './Components/Topbar/Topbar';\nimport Write from './Pages/Write/Write';\nimport Settings from './Pages/Settings/Settings';\nimport Login from './Pages/Login/login';\nimport Register from './Pages/Register/register';\nimport Logout from './Pages/Logout/Logout';\nimport { useContext } from 'react';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Single from './Pages/Single/Single';\nimport { UserProivder,UserContext } from './Context/User/UserContext';\nimport { PostsProivder } from './Context/PostsContext/PostsContext';\nimport { GroupProvider } from './Context/GroupContext/GroupContext';\nimport Error from './Pages/Error/Error';\n\n\nfunction App() {\n\n\n\n\n\n  const [user,setUser] =  useContext(UserContext);\n  return (\n    <Router>\n        <UserProivder>\n          <PostsProivder>\n            <GroupProvider>\n                <Topbar />\n\n        <Switch>\n          <Route exact path=\"/\">\n            \n            <Home/>\n          </Route>\n          <Route exact path=\"/register\">\n            {user ? <Home/> : <Register/>}\n          </Route>\n          <Route exact path=\"/login\">\n            {user? <Home/> : <Login/>}\n          </Route>\n          <Route exact path=\"/write\">\n            {user ? <Write/>: <Register/>}\n          </Route>\n          <Route exact path=\"/settings\">\n            {user ? <Settings/> : <Register/>}\n          </Route>\n          <Route exact path=\"/post/:slug\">\n            <Single />\n          </Route>\n          <Route exact path=\"/logout\">\n            <Logout/>\n            </Route>\n            <Route exact path=\"/error\">\n              <Error />\n          </Route>\n\n          </Switch>\n        {/* <Home/> */}\n        {/* <Write/> */}\n        {/* <Settings/> */}\n        {/* <Register /> */}\n        </GroupProvider>\n        </PostsProivder>\n        </UserProivder>\n    </Router>\n     \n    \n  );\n}\n\nexport default App;\n","D:\\react\\Blogging\\blogapp\\src\\reportWebVitals.js",[],"D:\\react\\Blogging\\blogapp\\src\\Pages\\Home\\Home.jsx",[],"D:\\react\\Blogging\\blogapp\\src\\Components\\Posts\\Posts.jsx",["101","102","103","104","105"],"import React, { useState,useContext,useEffect } from 'react'\r\nimport Post from '../Post/Post';\r\nimport './Posts.css';\r\nimport instance from '../../axios';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { PostsProivder,PostsContext } from '../../Context/PostsContext/PostsContext';\r\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nconst Posts = () => {\r\n\r\n\r\n   \r\n    const [posts,setPosts] = useContext(PostsContext);\r\n    const [groups] = useContext(GroupContext);\r\n    const [Loading,setLoading] = useState(true);\r\n\r\n    const [p,setP] = useState(posts);\r\n    const history = useHistory();\r\n    \r\n\r\n    useEffect ( () => {\r\n        (async () => {\r\n            await instance.get(`api/posts/all/`).then(\r\n                res => {\r\n                    setP(prev => prev = res.data);\r\n                    setLoading(false );\r\n                }\r\n            ).catch( err => {\r\n                setLoading(false );\r\n                history.push(\"/error\")\r\n            })\r\n        })();\r\n        \r\n    },[posts])\r\n\r\n\r\n    var posts_to_view = [];\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n           {\r\n            Loading ?  <Loader\r\n            className=\"loader\"\r\n            type=\"ThreeDots\"\r\n            color=\"#00BFFF\"\r\n            height={window.innerHeight/8}\r\n            width={window.innerWidth/8}\r\n            \r\n            \r\n          /> : \r\n            p.map( p => {\r\n            var name = '';\r\n             groups.forEach(g => {\r\n                if( g.id == p.group)\r\n                 {\r\n                     return name = g.name;\r\n                 }\r\n            });\r\n            return <Post key={p.id} id={p.id} slug={p.slug} title={p.title} message={p.message} group={name}  updated_at={p.updated_at}  username={p.username} />\r\n        })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n\r\n\r\n\r\n","D:\\react\\Blogging\\blogapp\\src\\Components\\Post\\Post.jsx",["106","107","108"],"D:\\react\\Blogging\\blogapp\\src\\Pages\\Single\\Single.jsx",[],"D:\\react\\Blogging\\blogapp\\src\\Components\\SinglePosts\\SinglePost.jsx",["109","110","111"],"D:\\react\\Blogging\\blogapp\\src\\Components\\Topbar\\Topbar.jsx",[],"D:\\react\\Blogging\\blogapp\\src\\Pages\\Write\\Write.jsx",["112","113","114"],"import instance from '../../axios';\r\nimport React,{useState,useEffect,useContext} from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\nimport { PostsContext } from '../../Context/PostsContext/PostsContext';\r\nimport './Write.css';\r\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\r\n\r\nconst Write = () => {\r\n\r\n\r\n    \r\n    \r\n    const [user,setUser] = useContext(UserContext);\r\n    const [posts,setPosts] = useContext(PostsContext);\r\n    const [groups] = useContext(GroupContext);\r\n    \r\n    const groupOptions = groups.filter( g =>  g.members.includes(user.id));\r\n    \r\n    \r\n    const [title,setTitle ]  = useState('');\r\n    const [msg,setMsg ]  = useState('');\r\n    const [groupSelect,setgroupSelect] = useState('');\r\n    const token = user? user.token : '';\r\n    \r\n    const history = useHistory();\r\n    const postHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if(user===undefined)\r\n        {\r\n            history.push(\"/login\");\r\n            return;\r\n        }\r\n        console.log(groupSelect);\r\n        \r\n        instance.post(`api/posts/create/`,\r\n            {\r\n                title: title,\r\n               message: msg,\r\n               group:groupSelect != null ? parseInt(groupSelect) :'',\r\n            },\r\n            {\r\n                headers: {\r\n                    Authorization: 'token '+token,\r\n                   },\r\n        }).then(\r\n            res => {\r\n                const newPost = {...res.data};\r\n                setPosts( prevPosts => [...prevPosts,newPost]);\r\n                setTitle('');\r\n                setMsg('');\r\n            }\r\n        ).catch ( err => {\r\n\r\n            setTitle('');\r\n            setMsg('');\r\n            alert(err);\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"write\">\r\n            <form className=\"writeForm\">\r\n                <div className=\"writeFormGroup\">\r\n                    <input type=\"text\" placeholder=\"Title\" value={title} onChange={ (e) => setTitle(e.target.value)} className=\"writeInput\" autoFocus={true} />\r\n                </div>\r\n                <div className=\"writeFormGroup\">\r\n                    <textarea placeholder=\"Write post...\" type=\"text\" value={msg} onChange={ (e) => setMsg(e.target.value)} className=\"writeInput writeText\">\r\n                    </textarea>\r\n                </div>\r\n                <div className=\"writeFormGroup\">\r\n                    <select className=\"writeInput\" value={groupSelect} onChange = { (e) => setgroupSelect(e.target.value) }>\r\n                        <option value={null} ></option>\r\n                        { groupOptions.map ( g => <option key={g.id} value={g.id} >{g.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"writeFormGroup\">\r\n                <button type=\"submit\" className=\"writeSubmit\" onClick={postHandler}>Post</button>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Write\r\n","D:\\react\\Blogging\\blogapp\\src\\Pages\\Settings\\Settings.jsx",[],"D:\\react\\Blogging\\blogapp\\src\\Pages\\Login\\login.jsx",["115","116","117","118"],"import React,{useState,useContext} from 'react'\r\nimport './login.css';\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport instance from '../../axios';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\nimport { PostsContext } from '../../Context/PostsContext/PostsContext';\r\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [username,setUsername] = useState(\"\")\r\n    const [password,setPassword] = useState(\"\")\r\n    const [loading,setLoading] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const [user,setUser] = useContext(UserContext);\r\n    const [posts,setPosts] = useContext(PostsContext);\r\n    const [groups,setGroups] = useContext(GroupContext);\r\n\r\n    const loginHandler =  (e)  => {\r\n        \r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        (async () => {\r\n            instance.post(`api/accounts/token`,{\r\n                username:username,\r\n                password:password,\r\n                }).then( res => {\r\n                    \r\n                    if(res.data)\r\n                    {\r\n                        const token = res.data.token;\r\n                        (async () =>{\r\n                            await instance.get(`api/accounts/login`,\r\n                               { \r\n                                   headers: {\r\n                                    Authorization: 'token '+token,\r\n                                   }\r\n                            }).then( res => {\r\n                                if( res.data)\r\n                                {\r\n                                    const logged_in_user = {\r\n                                        username: res.data.username,\r\n                                        password:password,\r\n                                        email: res.data.email,\r\n                                        id: res.data.pk,\r\n                                        token:token,\r\n                                    };\r\n\r\n                                    setUser(prev => logged_in_user);\r\n                                }\r\n                                \r\n                            }).catch( err => {\r\n                                history.push(\"/error\");\r\n                            })\r\n                        } )();\r\n        \r\n                            \r\n                             (async () => {\r\n                               await instance.get(`api/groups/all`,{\r\n                                    headers : {\r\n                                        Authorization: 'token '+token,\r\n                                    }\r\n                                }).then(\r\n                                    res => {\r\n                                        setGroups(res.data);\r\n                                    }\r\n                                ).catch( err => {\r\n                                    history.push(\"/error\");\r\n                                })\r\n                             } )();\r\n        \r\n                            \r\n        \r\n                    }\r\n                    setLoading(false)\r\n                    history.push(\"/\");\r\n                }).catch( error =>{\r\n                    history.push(\"/error\",{\r\n                        message:error.response.data.non_field_errors\r\n                    });\r\n                })\r\n        \r\n\r\n        })();\r\n       \r\n        \r\n    \r\n\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <span className=\"loginTitle\">Login</span>\r\n            { loading ? <Loader \r\n                    className=\"loader\"\r\n                    type=\"ThreeDots\"\r\n                    color=\"#00BFFF\"\r\n                    height={window.innerHeight/5}\r\n                    width={window.innerWidth/5}\r\n          />:\r\n            <form action=\"\" className=\"loginForm\">\r\n                <label>\r\n                    Username\r\n                </label>\r\n                <input type=\"text\"  value={username} onChange={ (e) => { setUsername(e.target.value)}} placeholder=\"enter your username...\" />\r\n                <label>\r\n                    Password\r\n                </label>\r\n                <input type=\"password\"  value={password} onChange={ (e) => { setPassword(e.target.value)}} placeholder=\"enter password\" />\r\n                <button className=\"loginButton\" onClick={loginHandler} > Login</button>\r\n                <button className=\"loginRegisterButton\"> <Link className=\"link\" to=\"/register\">Register</Link></button>\r\n               \r\n\r\n            </form>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","D:\\react\\Blogging\\blogapp\\src\\Pages\\Register\\register.jsx",["119"],"import React,{useState,useContext} from 'react'\r\nimport './register.css';\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport instance  from '../../axios';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\n\r\n\r\n\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const [username,setUsername] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [password2,setPassword2] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const history = useHistory();\r\n\r\n\r\n    const [user,setUser] = useContext(UserContext);\r\n    const registerUser = (e) => {\r\n        \r\n       e.preventDefault();\r\n       if(password===\"\" || username===\"\" || email===\"\")\r\n       {\r\n           alert(\"Input fields cannot be empty\")\r\n           return;\r\n       }\r\n       if( password !==password2)\r\n        {\r\n            alert(\"password do not match\")\r\n            return;\r\n        }\r\n        const validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n        if(!email.match(validRegex))\r\n        {\r\n            alert(\"invalid email\")\r\n            return;\r\n        }\r\n        \r\n        \r\n        \r\n        instance.post(`api/accounts/register`,{\r\n            username:username,\r\n            email : email,\r\n            password:password,\r\n            password2:password2,\r\n            \r\n        }).then(\r\n            res => {\r\n                \r\n                if(res.data.response && res.data.response.includes(\"successfully\"))\r\n                {\r\n                    setUser({\r\n                        username:res.data.username,\r\n                        email:res.data.email,\r\n                        password:res.data.password,\r\n                        token : res.data.token,\r\n                        message : res.data.response,\r\n                    })\r\n                    history.push(\"/\");\r\n                }\r\n                else{\r\n                    var msg = \"\";\r\n                    msg += res.data.username? res.data.username + '\\n':\"\";\r\n                    msg += res.data.email ? res.data.email + '\\n' : \"\";\r\n                    msg += res.data.password ? res.data.password + '\\n' : \"\";\r\n                    alert(msg);\r\n                }\r\n               \r\n                \r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"register\">\r\n            <span className=\"registerTitle\">Register</span>\r\n            <form action=\"\" className=\"registerForm\">\r\n                <label>\r\n                    Username\r\n                </label>\r\n                <input type=\"text\" value={username} onChange= { (e)=> setUsername(e.target.value)} placeholder=\"Enter your username...\" />\r\n                <label>\r\n                    Email\r\n                </label>\r\n                <input type=\"email\" value={email} onChange= { (e)=> setEmail(e.target.value)} placeholder=\"Enter your email...\" />\r\n                <label>\r\n                    Password\r\n                </label>\r\n                <input type=\"password\" value={password} onChange= { (e)=> setPassword(e.target.value)} placeholder=\"Enter password\" />\r\n                <label>\r\n                    Confirm Password\r\n                </label>\r\n                <input type=\"password\" value={password2} onChange= { (e)=> setPassword2(e.target.value)}  placeholder=\"Confirm password\" />\r\n                <button className=\"registerButton\" onClick={registerUser} > Register</button>\r\n                <button className=\"registerLoginButton\"> <Link className=\"link\" to=\"/login\">Login</Link></button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","D:\\react\\Blogging\\blogapp\\src\\Components\\Header\\Header.jsx",[],"D:\\react\\Blogging\\blogapp\\src\\Pages\\Logout\\Logout.jsx",[],"D:\\react\\Blogging\\blogapp\\src\\Context\\User\\UserContext.js",[],"D:\\react\\Blogging\\blogapp\\src\\Context\\PostsContext\\PostsContext.js",[],"D:\\react\\Blogging\\blogapp\\src\\Components\\Sidebar\\Sidebar.jsx",["120","121","122","123"],"D:\\react\\Blogging\\blogapp\\src\\Components\\Group\\Group.jsx",["124","125","126","127"],"import React,{useContext} from 'react'\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../../Context/User/UserContext';\r\nimport { GroupContext } from '../../Context/GroupContext/GroupContext';\r\nimport './Group.css';\r\n\r\n\r\nimport instance from '../../axios';\r\n\r\n// return <Group key={g.id} name={g.name} desc={g.description} members={g.members.count} posts={g.posts.length} />\r\n\r\n\r\n\r\nconst Group = (props) => {\r\n\r\n    const [user] = useContext(UserContext);\r\n    const [groups,setGroups] = useContext(UserContext);\r\n    const token = user ? user.token : '';\r\n    const history = useHistory();\r\n   \r\n\r\n   \r\n    const exitHandlder = (slug) => {\r\n        \r\n        instance.get(`api/groups/leave/${slug}`,{\r\n            headers : {\r\n                Authorization : 'token '+token,\r\n            }\r\n        });\r\n        props.reload(token);\r\n\r\n    }\r\n\r\n    const joinHandler = (slug) => {\r\n       \r\n       \r\n        instance.get(`api/groups/join/${slug}`,{\r\n            headers : {\r\n                Authorization : 'token '+token,\r\n            }\r\n        });\r\n\r\n        props.reload(token);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"group\">\r\n                <div className=\"groupHead\">\r\n                    <span className=\"groupTitle\">\r\n                        <Link className=\"link\" to={`/group/${props.id}`} > {props.name} </Link>\r\n                    </span>\r\n                 { props.isJoined ? <span className=\"groupExit\"> <i onClick={() => exitHandlder(props.slug) } className=\"fas fa-sign-out-alt\"></i> </span>\r\n                    : <span className=\"groupJoin\"> <i onClick={() => joinHandler(props.slug) } className=\"fas fa-user-plus\"></i> </span>}\r\n                </div>\r\n                <hr />\r\n                <div className=\"groupMeta\">\r\n                    <span className=\"groupdate\"> members: {props.members}</span>\r\n                    <span className=\"groupdate\">  posts:{props.posts}</span>\r\n                </div>\r\n\r\n            <p className=\"groupdesc\">\r\n                {props.desc}\r\n            </p>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Group\r\n","D:\\react\\Blogging\\blogapp\\src\\Context\\GroupContext\\GroupContext.js",[],"D:\\react\\Blogging\\blogapp\\src\\axios.js",[],"D:\\react\\Blogging\\blogapp\\src\\Pages\\Error\\Error.jsx",["128"],"import React from 'react'\r\nimport { useLocation } from 'react-router';\r\nimport './Error.css';\r\n\r\nconst Error = () => {\r\n    const location = useLocation();\r\n    const message = location.state ? location.state.message : undefined;\r\n\r\n    \r\nconsole.log(message);\r\n    return (\r\n        <div className=\"error\">\r\n            <h1> The Page is not available</h1>\r\n         {\r\n             message == undefined ?\r\n             \"\" : <p> <strong> {message} </strong></p>\r\n         }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":25,"column":15,"nodeType":"135","messageId":"136","endLine":25,"endColumn":22},{"ruleId":"133","severity":1,"message":"137","line":7,"column":10,"nodeType":"135","messageId":"136","endLine":7,"endColumn":23},{"ruleId":"133","severity":1,"message":"138","line":16,"column":18,"nodeType":"135","messageId":"136","endLine":16,"endColumn":26},{"ruleId":"139","severity":1,"message":"140","line":37,"column":7,"nodeType":"141","endLine":37,"endColumn":14,"suggestions":"142"},{"ruleId":"133","severity":1,"message":"143","line":40,"column":9,"nodeType":"135","messageId":"136","endLine":40,"endColumn":22},{"ruleId":"144","severity":1,"message":"145","line":57,"column":26,"nodeType":"146","messageId":"147","endLine":57,"endColumn":28},{"ruleId":"133","severity":1,"message":"148","line":10,"column":21,"nodeType":"135","messageId":"136","endLine":10,"endColumn":32},{"ruleId":"144","severity":1,"message":"145","line":10,"column":49,"nodeType":"146","messageId":"147","endLine":10,"endColumn":51},{"ruleId":"144","severity":1,"message":"145","line":10,"column":85,"nodeType":"146","messageId":"147","endLine":10,"endColumn":87},{"ruleId":"133","severity":1,"message":"149","line":25,"column":12,"nodeType":"135","messageId":"136","endLine":25,"endColumn":17},{"ruleId":"139","severity":1,"message":"150","line":44,"column":7,"nodeType":"141","endLine":44,"endColumn":9,"suggestions":"151"},{"ruleId":"144","severity":1,"message":"145","line":51,"column":18,"nodeType":"146","messageId":"147","endLine":51,"endColumn":20},{"ruleId":"133","severity":1,"message":"152","line":2,"column":24,"nodeType":"135","messageId":"136","endLine":2,"endColumn":33},{"ruleId":"133","severity":1,"message":"134","line":14,"column":17,"nodeType":"135","messageId":"136","endLine":14,"endColumn":24},{"ruleId":"133","severity":1,"message":"149","line":15,"column":12,"nodeType":"135","messageId":"136","endLine":15,"endColumn":17},{"ruleId":"133","severity":1,"message":"153","line":19,"column":12,"nodeType":"135","messageId":"136","endLine":19,"endColumn":16},{"ruleId":"133","severity":1,"message":"149","line":20,"column":12,"nodeType":"135","messageId":"136","endLine":20,"endColumn":17},{"ruleId":"133","severity":1,"message":"138","line":20,"column":18,"nodeType":"135","messageId":"136","endLine":20,"endColumn":26},{"ruleId":"133","severity":1,"message":"154","line":21,"column":12,"nodeType":"135","messageId":"136","endLine":21,"endColumn":18},{"ruleId":"133","severity":1,"message":"153","line":20,"column":12,"nodeType":"135","messageId":"136","endLine":20,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":30,"column":17,"nodeType":"146","messageId":"147","endLine":30,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":30,"column":30,"nodeType":"146","messageId":"147","endLine":30,"endColumn":32},{"ruleId":"144","severity":1,"message":"145","line":57,"column":18,"nodeType":"146","messageId":"147","endLine":57,"endColumn":20},{"ruleId":"144","severity":1,"message":"145","line":57,"column":39,"nodeType":"146","messageId":"147","endLine":57,"endColumn":41},{"ruleId":"133","severity":1,"message":"155","line":4,"column":10,"nodeType":"135","messageId":"136","endLine":4,"endColumn":22},{"ruleId":"133","severity":1,"message":"154","line":17,"column":12,"nodeType":"135","messageId":"136","endLine":17,"endColumn":18},{"ruleId":"133","severity":1,"message":"156","line":17,"column":19,"nodeType":"135","messageId":"136","endLine":17,"endColumn":28},{"ruleId":"133","severity":1,"message":"157","line":19,"column":11,"nodeType":"135","messageId":"136","endLine":19,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":15,"column":22,"nodeType":"146","messageId":"147","endLine":15,"endColumn":24},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","'PostsProivder' is defined but never used.","'setPosts' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["160"],"'posts_to_view' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setIsAuthor' is assigned a value but never used.","'posts' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.slug' and 'token'. Either include them or remove the dependency array.",["161"],"'useEffect' is defined but never used.","'user' is assigned a value but never used.","'groups' is assigned a value but never used.","'GroupContext' is defined but never used.","'setGroups' is assigned a value but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [history, posts]",{"range":"166","text":"167"},"Update the dependencies array to be: [props.slug, token]",{"range":"168","text":"169"},[1078,1085],"[history, posts]",[1295,1297],"[props.slug, token]"]